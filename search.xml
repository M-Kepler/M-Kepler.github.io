<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[记一次Segment fault]]></title>
    <url>%2F2019%2F04%2F14%2F%E8%AE%B0%E4%B8%80%E6%AC%A1Segment%20fault%2F</url>
    <content type="text"><![CDATA[重现 功能描述把 test.log 文件每一行按照 / 进行切片，将一行中的所有分片存放到 string 数组中 样例 test.log 中有很多行如下字符串 1home,m_kepler,project 目的是按照 , 切割，把子串存放到 string 数组中 1234string strTmp[3];strTmp[0] = &quot;home&quot;strTmp[1] = &quot;m_kepler&quot;strTmp[2] = &quot;project&quot; 出错的代码这里不用 strtok 是因为 ,, 也要算一个数据 123456789101112131415161718192021fstream test;char delim[] = ",";string strLine;string szstrTmp [3];test.open("./debug/test.log", ios::binary | ios::in);if(!test) perror("open");while(getline(test, strLine))&#123; int i = 0; // error1 char *orgstr = strdup(strLine.c_str()); // error2 for (token = strsep(&amp;orgstr, delim); token != NULL; token = strsep(&amp;orgstr, delim)) &#123; szstrTmp[i] = token; i++; &#125; free(orgstr);&#125;return 0; 分析 像下面这样把两个循环条件才出来，运行报错 Segmentation fault (core dumped) 12345678910string szstrTmp[3];while(getline(test,line))&#123; int j =0; for(int i =0; i &lt; 10; i++) &#123; szstrTmp[j] = "aaaa"; // gdb 调试报错此行 j++; &#125;&#125; 在 while 循环中使用 strdup，运行报错 munmap_chunk(): invalid pointer 1234567891011string szstrTmp[3];while(getline(test, line))&#123; int i = 0; char *orgstr = strdup(line.c_str()); for (token = strsep(&amp;orgstr, delim), i = 0; token != NULL, i != 3; token = strsep(&amp;orgstr, delim), i++) &#123; szstrTmp[i] = token; &#125; free(orgstr); // gbd 调试报错在此行&#125; 修复 不使用 strdup 、for 循环里多个条件限制 修复后的代码 12345678910111213141516171819202122232425fstream test;int i = 0; // ++++++char delim[] = ",";string strLine;string szstrTmp [3];test.open("./debug/test.log", ios::binary | ios::in);if(!test) perror("open");while(getline(test, strLine))&#123; // int i = 0; // error1 // ------ // char *orgstr = strdup(strLine.c_str()); // error2 // ------ char *orgstr = const_cast&lt;char*&gt;(strLine.c_str()); // for (token = strsep(&amp;orgstr, delim), i = 0; token != NULL; token = strsep(&amp;orgstr, delim)) // ------ for (token = strsep(&amp;orgstr, delim), i = 0; token != NULL, i &lt; 3; token = strsep(&amp;orgstr, delim), i++) // ++++++ &#123; szstrTmp[i] = token; // i++; // ------ &#125; // free(orgstr); // ------&#125;return 0;]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Bug</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F04%2F13%2Fhello-world%2F</url>
    <content type="text"><![CDATA[quote test Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Other</category>
      </categories>
      <tags>
        <tag>Other</tag>
      </tags>
  </entry>
</search>
