{"uid":"ccc1b74d96bd155e","name":"test_ppt2video[by_powerpoint]","fullName":"lib.ppt.test_ppt_handler#test_ppt2video","historyId":"3b289a6f34565c57982dbce30c248c4d","time":{"start":1718378017121,"stop":1718378017134,"duration":13},"status":"broken","statusMessage":"NameError: name 'ppt2video_by_powerpoint' is not defined","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/ppt/_out/test_ppt_handler'\nby_powerpoint = True\n\n    @pytest.mark.parametrize('by_powerpoint',\n                             [True, False],\n                             ids=['by_powerpoint', 'by_libreoffice'])\n    def test_ppt2video(test_output_dir, by_powerpoint):\n        # 把测试文件拷贝到当前函数名称的目录下\n        output_dir = os.path.join(\n            test_output_dir, curr_func_name())\n        os.makedirs(output_dir, exist_ok=True)\n        test_ppt_file = shutil.copy2(Assets.ppt, output_dir)\n    \n        # ppt 转成视频的文件名\n        output_video_filepath = FileUtil.rename_ext(\n            test_ppt_file, '.mp4')\n    \n>       ppt2video(ppt_path=test_ppt_file,\n                  output_video_path=output_video_filepath,\n                  by_powerpoint=by_powerpoint)\n\nmypy/tests/lib/ppt/test_ppt_handler.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nppt_path = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/ppt/_out/test_ppt_handler/test_ppt2video/ppt.pptx'\noutput_video_path = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/ppt/_out/test_ppt_handler/test_ppt2video/ppt.mp4'\nby_powerpoint = True\n\n    def ppt2video(ppt_path, output_video_path, by_powerpoint=False):\n        \"\"\"\n        把 PPT 转成视频\n        1. PPT 转成 PDF\n        2. PDF 转成图片\n        3. 图片合成视频\n    \n        :param output_video_path: 输出的视频的路径\n        :param by_powerpoint: 是否使用 powerpoint 把 PPT 导出成视频\n        \"\"\"\n        if os.path.exists(output_video_path):\n            LOG.warning('[%s] 已经存在，不需要转换', output_video_path)\n            return\n    \n        output_dir = os.path.dirname(output_video_path)\n        if by_powerpoint:\n>           ppt2video_by_powerpoint(ppt_path, output_video_path)\nE           NameError: name 'ppt2video_by_powerpoint' is not defined\n\nmypy/lib/ppt/ppt_handler.py:72: NameError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1718374855640,"stop":1718374855640,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1718378017119,"stop":1718378017120,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1718378017120,"stop":1718378017120,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"NameError: name 'ppt2video_by_powerpoint' is not defined","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/ppt/_out/test_ppt_handler'\nby_powerpoint = True\n\n    @pytest.mark.parametrize('by_powerpoint',\n                             [True, False],\n                             ids=['by_powerpoint', 'by_libreoffice'])\n    def test_ppt2video(test_output_dir, by_powerpoint):\n        # 把测试文件拷贝到当前函数名称的目录下\n        output_dir = os.path.join(\n            test_output_dir, curr_func_name())\n        os.makedirs(output_dir, exist_ok=True)\n        test_ppt_file = shutil.copy2(Assets.ppt, output_dir)\n    \n        # ppt 转成视频的文件名\n        output_video_filepath = FileUtil.rename_ext(\n            test_ppt_file, '.mp4')\n    \n>       ppt2video(ppt_path=test_ppt_file,\n                  output_video_path=output_video_filepath,\n                  by_powerpoint=by_powerpoint)\n\nmypy/tests/lib/ppt/test_ppt_handler.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nppt_path = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/ppt/_out/test_ppt_handler/test_ppt2video/ppt.pptx'\noutput_video_path = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/ppt/_out/test_ppt_handler/test_ppt2video/ppt.mp4'\nby_powerpoint = True\n\n    def ppt2video(ppt_path, output_video_path, by_powerpoint=False):\n        \"\"\"\n        把 PPT 转成视频\n        1. PPT 转成 PDF\n        2. PDF 转成图片\n        3. 图片合成视频\n    \n        :param output_video_path: 输出的视频的路径\n        :param by_powerpoint: 是否使用 powerpoint 把 PPT 导出成视频\n        \"\"\"\n        if os.path.exists(output_video_path):\n            LOG.warning('[%s] 已经存在，不需要转换', output_video_path)\n            return\n    \n        output_dir = os.path.dirname(output_video_path)\n        if by_powerpoint:\n>           ppt2video_by_powerpoint(ppt_path, output_video_path)\nE           NameError: name 'ppt2video_by_powerpoint' is not defined\n\nmypy/lib/ppt/ppt_handler.py:72: NameError","steps":[],"attachments":[{"uid":"e66fafd69764be4c","name":"log","source":"e66fafd69764be4c.txt","type":"text/plain","size":159}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_output_dir::0","time":{"start":1718378051608,"stop":1718378051608,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir::finish_callback","time":{"start":1718378051609,"stop":1718378051609,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"ppt"},{"name":"parentSuite","value":"lib.ppt"},{"name":"suite","value":"test_ppt_handler"},{"name":"host","value":"fv-az714-185"},{"name":"thread","value":"7144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.ppt.test_ppt_handler"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"by_powerpoint","value":"True"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["ppt"]},"source":"ccc1b74d96bd155e.json","parameterValues":["True"]}