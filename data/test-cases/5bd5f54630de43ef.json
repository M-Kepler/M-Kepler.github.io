{"uid":"5bd5f54630de43ef","name":"test_sort_video_infos[channel]","fullName":"apps.youtu2douyin.test_youtu_video_tools#test_sort_video_infos","historyId":"00e0c654fe7a222e15ac25ab2e0d97e7","time":{"start":1716538759694,"stop":1716538759695,"duration":1},"status":"broken","statusMessage":"KeyError: 'channels'","statusTrace":"coll_handler = <class 'mypy.lib.youtube.core.base.YouTubeChannel'>\n\n    @pytest.mark.parametrize(\n        'coll_handler',\n        [YouTubeChannel, YouTubePlaylist],\n        ids=['channel', 'playlist'])\n    def test_sort_video_infos(coll_handler):\n        record_api = JSONConfigHelper(\n            os.path.join(curr_path, 'config',\n                         coll_handler.record_filename))\n>       sort_video_infos(record_api)\n\nmypy/tests/apps/youtu2douyin/test_youtu_video_tools.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrecord_api = <mypy.utils.json_config.JSONConfigHelper object at 0x7ffab748b430>\n\n    def sort_video_infos(record_api):\n        \"\"\"\n        把视频记录信息按发布时间倒序排序\n        \"\"\"\n        LOG.info('开始对 %s 视频列表按照 publish_date 进行降序排序',\n                 record_api._json_filepath)\n    \n        def do_sort(data):\n            # 补充缺失的 publish_date、title、id 字段\n            for item in data:\n                y2_video = YouTube(item['url'])\n                if not item.get('publish_date'):\n                    item['publish_date'] = str(get_video_publish_date(item['url']))\n                if not item.get('title'):\n                    item['title'] = y2_video.title\n                if not item.get('id'):\n                    item['id'] = y2_video.video_id\n    \n            sorted_videos = sorted(\n                data, key=lambda x: x.get(\n                    \"publish_date\", Const.def_pub_datetime), reverse=True)\n            return sorted_videos\n    \n        upload_record = record_api.read()\n>       channels = upload_record['channels']\nE       KeyError: 'channels'\n\nmypy/apps/youtu2douyin/tools.py:64: KeyError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1716535125966,"stop":1716535125966,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1716538758903,"stop":1716538758904,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"KeyError: 'channels'","statusTrace":"coll_handler = <class 'mypy.lib.youtube.core.base.YouTubeChannel'>\n\n    @pytest.mark.parametrize(\n        'coll_handler',\n        [YouTubeChannel, YouTubePlaylist],\n        ids=['channel', 'playlist'])\n    def test_sort_video_infos(coll_handler):\n        record_api = JSONConfigHelper(\n            os.path.join(curr_path, 'config',\n                         coll_handler.record_filename))\n>       sort_video_infos(record_api)\n\nmypy/tests/apps/youtu2douyin/test_youtu_video_tools.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrecord_api = <mypy.utils.json_config.JSONConfigHelper object at 0x7ffab748b430>\n\n    def sort_video_infos(record_api):\n        \"\"\"\n        把视频记录信息按发布时间倒序排序\n        \"\"\"\n        LOG.info('开始对 %s 视频列表按照 publish_date 进行降序排序',\n                 record_api._json_filepath)\n    \n        def do_sort(data):\n            # 补充缺失的 publish_date、title、id 字段\n            for item in data:\n                y2_video = YouTube(item['url'])\n                if not item.get('publish_date'):\n                    item['publish_date'] = str(get_video_publish_date(item['url']))\n                if not item.get('title'):\n                    item['title'] = y2_video.title\n                if not item.get('id'):\n                    item['id'] = y2_video.video_id\n    \n            sorted_videos = sorted(\n                data, key=lambda x: x.get(\n                    \"publish_date\", Const.def_pub_datetime), reverse=True)\n            return sorted_videos\n    \n        upload_record = record_api.read()\n>       channels = upload_record['channels']\nE       KeyError: 'channels'\n\nmypy/apps/youtu2douyin/tools.py:64: KeyError","steps":[],"attachments":[{"uid":"5297544b8abb3de4","name":"log","source":"5297544b8abb3de4.txt","type":"text/plain","size":217}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1716538759710,"stop":1716538759711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"apps.youtu2douyin"},{"name":"suite","value":"test_youtu_video_tools"},{"name":"host","value":"fv-az883-453"},{"name":"thread","value":"6671-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.youtu2douyin.test_youtu_video_tools"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"coll_handler","value":"<class 'mypy.lib.youtube.core.base.YouTubeChannel'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"5bd5f54630de43ef.json","parameterValues":["<class 'mypy.lib.youtube.core.base.YouTubeChannel'>"]}