{"uid":"73af4b487e3fc77e","name":"test_wechat_publish_app[video]","fullName":"lib.wechat.test_wechat_publish_app#test_wechat_publish_app","historyId":"ecf6534a6d03007bde3a30c753929b00","time":{"start":1719587026373,"stop":1719587407338,"duration":380965},"status":"broken","statusMessage":"mypy.lib.playwright.exceptions.PublishFail: RetryError[<Future at 0x7fc3e06ebfa0 state=finished raised PublishFail>]","statusTrace":"self = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\npage = <Page url='https://channels.weixin.qq.com/login.html'>\n\n    async def _check_login_status(self, page: Page):\n        \"\"\"\n        检查登录状态\n        \"\"\"\n        try:\n            # 登录\n            await page.goto(self._publish_playwright_cfg.creator_home_url)\n>           user_name = await self._get_logined_username(page)\n\nmypy/lib/playwright/publish_helper.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_helper.py:64: in _get_logined_username\n    raise ex\nmypy/lib/playwright/publish_helper.py:60: in _get_logined_username\n    user_name = await page.inner_text(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/async_api/_generated.py:10332: in inner_text\n    await self._impl_obj.inner_text(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_page.py:899: in inner_text\n    return await self._main_frame.inner_text(**locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_frame.py:618: in inner_text\n    return await self._channel.send(\"innerText\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fc3d8c11850>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fc3e06f1160>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.inner_text: Timeout 120000ms exceeded.\nE           Call log:\nE           waiting for locator(\".finder-nickname\")\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_connection.py:514: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fc3d8c19a60>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # step1. 判断登录状态\n>           await self._check_login_status(page)\n\nmypy/lib/playwright/publish_helper.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\npage = <Page url='https://channels.weixin.qq.com/login.html'>\n\n    async def _check_login_status(self, page: Page):\n        \"\"\"\n        检查登录状态\n        \"\"\"\n        try:\n            # 登录\n            await page.goto(self._publish_playwright_cfg.creator_home_url)\n            user_name = await self._get_logined_username(page)\n            self._logger.info('当前登录账号为 [%s]', user_name)\n        except Exception as ex:\n            self._logger.exception('账号登录状态已失效，正在跳出: %s', ex)\n>           raise CheckLoginStatusExp(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.CheckLoginStatusExp: Page.inner_text: Timeout 120000ms exceeded.\nE           Call log:\nE           waiting for locator(\".finder-nickname\")\n\nmypy/lib/playwright/publish_helper.py:77: CheckLoginStatusExp\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n            async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(LoginLocator.publish_retry_cnt),\n                    wait=wait_fixed(LoginLocator.publish_retry_interval),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n                with attempt:\n                    async with async_playwright() as playwright:\n>                       await self.publish_mission(playwright)\n\nmypy/lib/playwright/publish_helper.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fc3d8c19a60>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # step1. 判断登录状态\n            await self._check_login_status(page)\n    \n            # step2. 上传发布内容\n            await self.upload(page)\n    \n            # step3. 填写信息\n            await self.fill_publish_content(page)\n    \n            # step4. 触发发布并检查是否发布成功\n            await self.publish_trigger(page)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常: %s',\n                                   self._pub_title, ex)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: Page.inner_text: Timeout 120000ms exceeded.\nE           Call log:\nE           waiting for locator(\".finder-nickname\")\n\nmypy/lib/playwright/publish_helper.py:132: PublishFail\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n>           async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(LoginLocator.publish_retry_cnt),\n                    wait=wait_fixed(LoginLocator.publish_retry_interval),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n\nmypy/lib/playwright/publish_helper.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/asyncio/__init__.py:166: in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/asyncio/__init__.py:153: in iter\n    result = await action(retry_state)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/_utils.py:99: in inner\n    return call(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrs = <RetryCallState 140478961170272: attempt #3; slept for 6.0; last result: failed (PublishFail Page.inner_text: Timeout 120000ms exceeded.\nCall log:\nwaiting for locator(\".finder-nickname\")\n)>\n\n    def exc_check(rs: \"RetryCallState\") -> None:\n        fut = t.cast(Future, rs.outcome)\n        retry_exc = self.retry_error_cls(fut)\n        if self.reraise:\n            raise retry_exc.reraise()\n>       raise retry_exc from fut.exception()\nE       tenacity.RetryError: RetryError[<Future at 0x7fc3e06ebfa0 state=finished raised PublishFail>]\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/__init__.py:419: RetryError\n\nThe above exception was the direct cause of the following exception:\n\npublish_file = '/home/runner/work/github-runner/github-runner/mypy/assets/media/ppt/ppt_video_maked.mp4'\npublish_media_type = 'video'\n\n    @pytest.mark.parametrize(\n        'publish_file,publish_media_type',\n        [(Assets.ppt_video_maked, Const.MEDIA_TYPE_VIDEO)],\n        ids=[Const.MEDIA_TYPE_VIDEO])\n    def test_wechat_publish_app(publish_file, publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n>       WechatPublishApp(curr_dir).publish(\n            upload_filepath=publish_file)\n\nmypy/tests/lib/wechat/test_wechat_publish_app.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_app.py:143: in publish\n    asyncio.run(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/base_events.py:647: in run_until_complete\n    return future.result()\nmypy/lib/playwright/publish_app.py:139: in async_publish\n    await publish_helper.do_publish()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n            async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(LoginLocator.publish_retry_cnt),\n                    wait=wait_fixed(LoginLocator.publish_retry_interval),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n                with attempt:\n                    async with async_playwright() as playwright:\n                        await self.publish_mission(playwright)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常: %s',\n                                   self._pub_title, ex)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: RetryError[<Future at 0x7fc3e06ebfa0 state=finished raised PublishFail>]\n\nmypy/lib/playwright/publish_helper.py:153: PublishFail","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1719581870889,"stop":1719581870890,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1719587026372,"stop":1719587026373,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"mypy.lib.playwright.exceptions.PublishFail: RetryError[<Future at 0x7fc3e06ebfa0 state=finished raised PublishFail>]","statusTrace":"self = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\npage = <Page url='https://channels.weixin.qq.com/login.html'>\n\n    async def _check_login_status(self, page: Page):\n        \"\"\"\n        检查登录状态\n        \"\"\"\n        try:\n            # 登录\n            await page.goto(self._publish_playwright_cfg.creator_home_url)\n>           user_name = await self._get_logined_username(page)\n\nmypy/lib/playwright/publish_helper.py:73: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_helper.py:64: in _get_logined_username\n    raise ex\nmypy/lib/playwright/publish_helper.py:60: in _get_logined_username\n    user_name = await page.inner_text(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/async_api/_generated.py:10332: in inner_text\n    await self._impl_obj.inner_text(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_page.py:899: in inner_text\n    return await self._main_frame.inner_text(**locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_frame.py:618: in inner_text\n    return await self._channel.send(\"innerText\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fc3d8c11850>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fc3e06f1160>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.inner_text: Timeout 120000ms exceeded.\nE           Call log:\nE           waiting for locator(\".finder-nickname\")\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/playwright/_impl/_connection.py:514: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fc3d8c19a60>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # step1. 判断登录状态\n>           await self._check_login_status(page)\n\nmypy/lib/playwright/publish_helper.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\npage = <Page url='https://channels.weixin.qq.com/login.html'>\n\n    async def _check_login_status(self, page: Page):\n        \"\"\"\n        检查登录状态\n        \"\"\"\n        try:\n            # 登录\n            await page.goto(self._publish_playwright_cfg.creator_home_url)\n            user_name = await self._get_logined_username(page)\n            self._logger.info('当前登录账号为 [%s]', user_name)\n        except Exception as ex:\n            self._logger.exception('账号登录状态已失效，正在跳出: %s', ex)\n>           raise CheckLoginStatusExp(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.CheckLoginStatusExp: Page.inner_text: Timeout 120000ms exceeded.\nE           Call log:\nE           waiting for locator(\".finder-nickname\")\n\nmypy/lib/playwright/publish_helper.py:77: CheckLoginStatusExp\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n            async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(LoginLocator.publish_retry_cnt),\n                    wait=wait_fixed(LoginLocator.publish_retry_interval),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n                with attempt:\n                    async with async_playwright() as playwright:\n>                       await self.publish_mission(playwright)\n\nmypy/lib/playwright/publish_helper.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fc3d8c19a60>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # step1. 判断登录状态\n            await self._check_login_status(page)\n    \n            # step2. 上传发布内容\n            await self.upload(page)\n    \n            # step3. 填写信息\n            await self.fill_publish_content(page)\n    \n            # step4. 触发发布并检查是否发布成功\n            await self.publish_trigger(page)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常: %s',\n                                   self._pub_title, ex)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: Page.inner_text: Timeout 120000ms exceeded.\nE           Call log:\nE           waiting for locator(\".finder-nickname\")\n\nmypy/lib/playwright/publish_helper.py:132: PublishFail\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n>           async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(LoginLocator.publish_retry_cnt),\n                    wait=wait_fixed(LoginLocator.publish_retry_interval),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n\nmypy/lib/playwright/publish_helper.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/asyncio/__init__.py:166: in __anext__\n    do = await self.iter(retry_state=self._retry_state)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/asyncio/__init__.py:153: in iter\n    result = await action(retry_state)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/_utils.py:99: in inner\n    return call(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrs = <RetryCallState 140478961170272: attempt #3; slept for 6.0; last result: failed (PublishFail Page.inner_text: Timeout 120000ms exceeded.\nCall log:\nwaiting for locator(\".finder-nickname\")\n)>\n\n    def exc_check(rs: \"RetryCallState\") -> None:\n        fut = t.cast(Future, rs.outcome)\n        retry_exc = self.retry_error_cls(fut)\n        if self.reraise:\n            raise retry_exc.reraise()\n>       raise retry_exc from fut.exception()\nE       tenacity.RetryError: RetryError[<Future at 0x7fc3e06ebfa0 state=finished raised PublishFail>]\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/tenacity/__init__.py:419: RetryError\n\nThe above exception was the direct cause of the following exception:\n\npublish_file = '/home/runner/work/github-runner/github-runner/mypy/assets/media/ppt/ppt_video_maked.mp4'\npublish_media_type = 'video'\n\n    @pytest.mark.parametrize(\n        'publish_file,publish_media_type',\n        [(Assets.ppt_video_maked, Const.MEDIA_TYPE_VIDEO)],\n        ids=[Const.MEDIA_TYPE_VIDEO])\n    def test_wechat_publish_app(publish_file, publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n>       WechatPublishApp(curr_dir).publish(\n            upload_filepath=publish_file)\n\nmypy/tests/lib/wechat/test_wechat_publish_app.py:25: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_app.py:143: in publish\n    asyncio.run(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/base_events.py:647: in run_until_complete\n    return future.result()\nmypy/lib/playwright/publish_app.py:139: in async_publish\n    await publish_helper.do_publish()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.wechat.video.wechat_publish_helper.WechatPublishHelper object at 0x7fc3e0417190>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n            async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(LoginLocator.publish_retry_cnt),\n                    wait=wait_fixed(LoginLocator.publish_retry_interval),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n                with attempt:\n                    async with async_playwright() as playwright:\n                        await self.publish_mission(playwright)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常: %s',\n                                   self._pub_title, ex)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: RetryError[<Future at 0x7fc3e06ebfa0 state=finished raised PublishFail>]\n\nmypy/lib/playwright/publish_helper.py:153: PublishFail","steps":[],"attachments":[{"uid":"f7232b8a58dec2f6","name":"log","source":"f7232b8a58dec2f6.txt","type":"text/plain","size":18651}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1719587407724,"stop":1719587407724,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"lib.wechat"},{"name":"suite","value":"test_wechat_publish_app"},{"name":"host","value":"fv-az1788-68"},{"name":"thread","value":"7120-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.wechat.test_wechat_publish_app"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"publish_file","value":"'/home/runner/work/github-runner/github-runner/mypy/assets/media/ppt/ppt_video_maked.mp4'"},{"name":"publish_media_type","value":"'video'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"73af4b487e3fc77e.json","parameterValues":["'/home/runner/work/github-runner/github-runner/mypy/assets/media/ppt/ppt_video_maked.mp4'","'video'"]}