{"uid":"34e41c2399a2ce04","name":"test_sort_video_infos[playlist]","fullName":"apps.youtu2douyin.test_youtu_video_tools#test_sort_video_infos","historyId":"b94db6d3d7bd22801fa6bbf56965091b","time":{"start":1724463025761,"stop":1724463026902,"duration":1141},"description":"\n    测试视频信息排序\n    ","descriptionHtml":"<pre><code>测试视频信息排序\n</code></pre>\n","status":"broken","statusMessage":"pytube.exceptions.PytubeError: Exception while accessing title of https://youtube.com/watch?v=PFlBiUa4B84. Please file a bug report at https://github.com/pytube/pytube","statusTrace":"self = <pytube.__main__.YouTube object: videoId=PFlBiUa4B84>\n\n    @property\n    def title(self) -> str:\n        \"\"\"Get the video title.\n    \n        :rtype: str\n        \"\"\"\n        if self._title:\n            return self._title\n    \n        try:\n>           self._title = self.vid_info['videoDetails']['title']\nE           KeyError: 'videoDetails'\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:341: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\ntest_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/apps/youtu2douyin/_out/test_youtu_video_tools'\ncoll_handler = <class 'mypy.lib.youtube.core.base.YouTubePlaylist'>\n\n    @pytest.mark.parametrize(\n        'coll_handler',\n        [YouTubeChannel, YouTubePlaylist],\n        ids=['channel', 'playlist'])\n    def test_sort_video_infos(test_output_dir, coll_handler):\n        \"\"\"\n        测试视频信息排序\n        \"\"\"\n        work_path = os.path.join(\n            test_output_dir, curr_func_name())\n        os.makedirs(work_path, exist_ok=True)\n        copy_test_config(curr_path, work_path)\n    \n        record_api = JSONConfigHelper(\n            os.path.join(work_path, 'config',\n                         coll_handler.record_filename))\n>       sort_video_infos(record_api)\n\nmypy/tests/apps/youtu2douyin/test_youtu_video_tools.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/tools.py:64: in sort_video_infos\n    channel['videos'] = do_sort(channel['videos'])\nmypy/apps/youtu2douyin/tools.py:51: in do_sort\n    item['title'] = y2_video.title\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytube.__main__.YouTube object: videoId=PFlBiUa4B84>\n\n    @property\n    def title(self) -> str:\n        \"\"\"Get the video title.\n    \n        :rtype: str\n        \"\"\"\n        if self._title:\n            return self._title\n    \n        try:\n            self._title = self.vid_info['videoDetails']['title']\n        except KeyError:\n            # Check_availability will raise the correct exception in most cases\n            #  if it doesn't, ask for a report.\n            self.check_availability()\n>           raise exceptions.PytubeError(\n                (\n                    f'Exception while accessing title of {self.watch_url}. '\n                    'Please file a bug report at https://github.com/pytube/pytube'\n                )\n            )\nE           pytube.exceptions.PytubeError: Exception while accessing title of https://youtube.com/watch?v=PFlBiUa4B84. Please file a bug report at https://github.com/pytube/pytube\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:346: PytubeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1724458994133,"stop":1724458994133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1724463025177,"stop":1724463025178,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1724463025756,"stop":1724463025756,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"test_output_dir::0","time":{"start":1724463026923,"stop":1724463026923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir::finish_callback","time":{"start":1724463026923,"stop":1724463026923,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"apps.youtu2douyin"},{"name":"suite","value":"test_youtu_video_tools"},{"name":"host","value":"fv-az1117-778"},{"name":"thread","value":"8960-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.youtu2douyin.test_youtu_video_tools"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"coll_handler","value":"<class 'mypy.lib.youtube.core.base.YouTubePlaylist'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"34e41c2399a2ce04.json","parameterValues":["<class 'mypy.lib.youtube.core.base.YouTubePlaylist'>"]}