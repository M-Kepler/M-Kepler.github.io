{"uid":"e83782b971656675","name":"test_read_text","fullName":"lib.audio.test_tts#test_read_text","historyId":"8f7f8f80946bb47eb1e3be4863913f31","time":{"start":1712578705929,"stop":1712578706031,"duration":102},"status":"broken","statusMessage":"OSError: libespeak.so.1: cannot open shared object file: No such file or directory","statusTrace":"driverName = None, debug = False\n\n    def init(driverName=None, debug=False):\n        '''\n        Constructs a new TTS engine instance or reuses the existing instance for\n        the driver name.\n    \n        @param driverName: Name of the platform specific driver to use. If\n            None, selects the default driver for the operating system.\n        @type: str\n        @param debug: Debugging output enabled or not\n        @type debug: bool\n        @return: Engine instance\n        @rtype: L{engine.Engine}\n        '''\n        try:\n>           eng = _activeEngines[driverName]\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pyttsx3/__init__.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <WeakValueDictionary at 0x7fb0ccabae80>, key = None\n\n    def __getitem__(self, key):\n        if self._pending_removals:\n            self._commit_removals()\n>       o = self.data[key]()\nE       KeyError: None\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/weakref.py:131: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\n    @pytest.mark.skipif(\n        condition=Const.IN_WIN,\n        reason='win 系统跳过该用例')\n    def test_read_text():\n>       read_text('hello world!')\n\nmypy/tests/lib/audio/test_tts.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/audio/tts.py:13: in read_text\n    engine = pyttsx3.init()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pyttsx3/__init__.py:22: in init\n    eng = Engine(driverName, debug)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pyttsx3/engine.py:30: in __init__\n    self.proxy = driver.DriverProxy(weakref.proxy(self), driverName, debug)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pyttsx3/driver.py:50: in __init__\n    self._module = importlib.import_module(name)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/importlib/__init__.py:127: in import_module\n    return _bootstrap._gcd_import(name[level:], package, level)\n<frozen importlib._bootstrap>:1014: in _gcd_import\n    ???\n<frozen importlib._bootstrap>:991: in _find_and_load\n    ???\n<frozen importlib._bootstrap>:975: in _find_and_load_unlocked\n    ???\n<frozen importlib._bootstrap>:671: in _load_unlocked\n    ???\n<frozen importlib._bootstrap_external>:843: in exec_module\n    ???\n<frozen importlib._bootstrap>:219: in _call_with_frames_removed\n    ???\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pyttsx3/drivers/espeak.py:9: in <module>\n    from . import _espeak, toUtf8, fromUtf8\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/pyttsx3/drivers/_espeak.py:18: in <module>\n    dll = cdll.LoadLibrary('libespeak.so.1')\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/ctypes/__init__.py:451: in LoadLibrary\n    return self._dlltype(name)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <CDLL 'libespeak.so.1', handle 0 at 0x7fb0ccbd8f10>\nname = 'libespeak.so.1', mode = 0, handle = None, use_errno = False\nuse_last_error = False, winmode = None\n\n    def __init__(self, name, mode=DEFAULT_MODE, handle=None,\n                 use_errno=False,\n                 use_last_error=False,\n                 winmode=None):\n        self._name = name\n        flags = self._func_flags_\n        if use_errno:\n            flags |= _FUNCFLAG_USE_ERRNO\n        if use_last_error:\n            flags |= _FUNCFLAG_USE_LASTERROR\n        if _sys.platform.startswith(\"aix\"):\n            \"\"\"When the name contains \".a(\" and ends with \")\",\n               e.g., \"libFOO.a(libFOO.so)\" - this is taken to be an\n               archive(member) syntax for dlopen(), and the mode is adjusted.\n               Otherwise, name is presented to dlopen() as a file argument.\n            \"\"\"\n            if name and name.endswith(\")\") and \".a(\" in name:\n                mode |= ( _os.RTLD_MEMBER | _os.RTLD_NOW )\n        if _os.name == \"nt\":\n            if winmode is not None:\n                mode = winmode\n            else:\n                import nt\n                mode = nt._LOAD_LIBRARY_SEARCH_DEFAULT_DIRS\n                if '/' in name or '\\\\' in name:\n                    self._name = nt._getfullpathname(self._name)\n                    mode |= nt._LOAD_LIBRARY_SEARCH_DLL_LOAD_DIR\n    \n        class _FuncPtr(_CFuncPtr):\n            _flags_ = flags\n            _restype_ = self._func_restype_\n        self._FuncPtr = _FuncPtr\n    \n        if handle is None:\n>           self._handle = _dlopen(self._name, mode)\nE           OSError: libespeak.so.1: cannot open shared object file: No such file or directory\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/ctypes/__init__.py:373: OSError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"tag","value":"@pytest.mark.skipif(condition=False, reason='win 系统跳过该用例')"},{"name":"tag","value":"audio"},{"name":"parentSuite","value":"lib.audio"},{"name":"suite","value":"test_tts"},{"name":"host","value":"fv-az985-89"},{"name":"thread","value":"7147-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.audio.test_tts"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.skipif(condition=False, reason='win 系统跳过该用例')","audio"]},"source":"e83782b971656675.json","parameterValues":[]}