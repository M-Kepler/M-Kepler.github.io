{"uid":"7cfb5651e3d2aa83","name":"test_douyin2douyin","fullName":"apps.douyin2douyin.test_douyin2douyin#test_douyin2douyin","historyId":"9c3088b85c6e06877d27a19ba286db3e","time":{"start":1712576384018,"stop":1712576385659,"duration":1641},"status":"skipped","statusMessage":"XFAIL API 有限制，可能会获取 cookie 失败\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"test_output_dir = '/home/runner/work/Python/Python/mypy/tests/apps/douyin2douyin/_out/test_douyin2douyin'\n\n    @pytest.mark.app\n    @pytest.mark.douyin\n    @pytest.mark.xfail(reason='API 有限制，可能会获取 cookie 失败')\n    def test_douyin2douyin(test_output_dir):\n>       video_path = main(curr_path)\n\nmypy/tests/apps/douyin2douyin/test_douyin2douyin.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/douyin2douyin/main.py:13: in main\n    video_id, video_path = api.handle()\nmypy/lib/douyin/get_hot_video.py:270: in handle\n    raise ex\nmypy/lib/douyin/get_hot_video.py:261: in handle\n    video_url = self._get_douyin_hot_music_video()\nmypy/lib/douyin/get_hot_video.py:177: in _get_douyin_hot_music_video\n    jd, res = self._get_douyin_music_video()\nmypy/lib/douyin/get_hot_video.py:128: in _get_douyin_music_video\n    cookie_dict = json.load(fd)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fb0e4fba220>\ns = 'x-jupiter-uuid=17122092295872892; gd_random_834549=eyJtYXRjaCI6ZmFsc2UsInBlcmNlbnQiOjAuOTY0MDkxMzgzNjc2OTAzfQ==.32HjS...kDS89ttl08yn__EosjVal_QGhhgSrO2X3F_A%7C1712209281%7Cccfc5c0fbc3ffdee3a93c3c36174ea40f75e6b190fb5552de4d6b16050ac792d; '\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"test_output_dir","time":{"start":1712576384016,"stop":1712576384017,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL API 有限制，可能会获取 cookie 失败\n\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"test_output_dir = '/home/runner/work/Python/Python/mypy/tests/apps/douyin2douyin/_out/test_douyin2douyin'\n\n    @pytest.mark.app\n    @pytest.mark.douyin\n    @pytest.mark.xfail(reason='API 有限制，可能会获取 cookie 失败')\n    def test_douyin2douyin(test_output_dir):\n>       video_path = main(curr_path)\n\nmypy/tests/apps/douyin2douyin/test_douyin2douyin.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/douyin2douyin/main.py:13: in main\n    video_id, video_path = api.handle()\nmypy/lib/douyin/get_hot_video.py:270: in handle\n    raise ex\nmypy/lib/douyin/get_hot_video.py:261: in handle\n    video_url = self._get_douyin_hot_music_video()\nmypy/lib/douyin/get_hot_video.py:177: in _get_douyin_hot_music_video\n    jd, res = self._get_douyin_music_video()\nmypy/lib/douyin/get_hot_video.py:128: in _get_douyin_music_video\n    cookie_dict = json.load(fd)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/__init__.py:293: in load\n    return loads(fp.read(),\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fb0e4fba220>\ns = 'x-jupiter-uuid=17122092295872892; gd_random_834549=eyJtYXRjaCI6ZmFsc2UsInBlcmNlbnQiOjAuOTY0MDkxMzgzNjc2OTAzfQ==.32HjS...kDS89ttl08yn__EosjVal_QGhhgSrO2X3F_A%7C1712209281%7Cccfc5c0fbc3ffdee3a93c3c36174ea40f75e6b190fb5552de4d6b16050ac792d; '\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/json/decoder.py:355: JSONDecodeError","steps":[],"attachments":[{"uid":"18cf13a63394a3a4","name":"log","source":"18cf13a63394a3a4.txt","type":"text/plain","size":1526}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_output_dir::0","time":{"start":1712576385840,"stop":1712576385840,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"@pytest.mark.xfail(reason='API 有限制，可能会获取 cookie 失败')"},{"name":"tag","value":"douyin"},{"name":"tag","value":"app"},{"name":"parentSuite","value":"apps.douyin2douyin"},{"name":"suite","value":"test_douyin2douyin"},{"name":"host","value":"fv-az985-89"},{"name":"thread","value":"7147-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.douyin2douyin.test_douyin2douyin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["app","@pytest.mark.xfail(reason='API 有限制，可能会获取 cookie 失败')","douyin"]},"source":"7cfb5651e3d2aa83.json","parameterValues":[]}