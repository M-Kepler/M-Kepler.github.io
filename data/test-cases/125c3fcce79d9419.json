{"uid":"125c3fcce79d9419","name":"test_subtitle2speech","fullName":"lib.subtitle.test_subtitle2speech#test_subtitle2speech","historyId":"1855a716e6666bbd9c435ad60acb9d63","time":{"start":1714033024720,"stop":1714033043263,"duration":18543},"status":"broken","statusMessage":"asyncio.exceptions.TimeoutError","statusTrace":"self = <aiohttp.client_ws.ClientWebSocketResponse object at 0x7f28c7ac57c0>\ntimeout = None\n\n    async def receive(self, timeout: Optional[float] = None) -> WSMessage:\n        while True:\n            if self._waiting is not None:\n                raise RuntimeError(\"Concurrent call to receive() is not allowed\")\n    \n            if self._closed:\n                return WS_CLOSED_MESSAGE\n            elif self._closing:\n                await self.close()\n                return WS_CLOSED_MESSAGE\n    \n            try:\n                self._waiting = self._loop.create_future()\n                try:\n                    async with async_timeout.timeout(timeout or self._receive_timeout):\n>                       msg = await self._reader.read()\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/client_ws.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/streams.py:681: in read\n    return await super().read()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <aiohttp.streams.FlowControlDataQueue object at 0x7f28c7918fa0>\n\n    async def read(self) -> _T:\n        if not self._buffer and not self._eof:\n            assert not self._waiter\n            self._waiter = self._loop.create_future()\n            try:\n>               await self._waiter\nE               asyncio.exceptions.CancelledError\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/streams.py:640: CancelledError\n\nDuring handling of the above exception, another exception occurred:\n\ntest_output_dir = '/home/runner/work/Python/Python/mypy/tests/lib/subtitle/_out/test_subtitle2speech'\n\n    def test_subtitle2speech(test_output_dir):\n        output_filepath = os.path.join(\n            test_output_dir, curr_func_name() + '.mp3'\n        )\n        # SRT文件路径\n>       subtitle2speech(Assets.ted_zh_srt, output_filepath)\n\nmypy/tests/lib/subtitle/test_subtitle2speech.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/subtitle/subtitle2speech.py:119: in subtitle2speech\n    asyncio.run(asubtitle2speech(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nmypy/lib/subtitle/subtitle2speech.py:88: in asubtitle2speech\n    async for chunk in communicate.stream():\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/edge_tts/communicate.py:420: in stream\n    async for received in websocket:\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/client_ws.py:312: in __anext__\n    msg = await self.receive()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/client_ws.py:244: in receive\n    msg = await self._reader.read()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/async_timeout/__init__.py:141: in __aexit__\n    self._do_exit(exc_type)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <async_timeout.Timeout object at 0x7f28c7a95900>\nexc_type = <class 'asyncio.exceptions.CancelledError'>\n\n    def _do_exit(self, exc_type: Optional[Type[BaseException]]) -> None:\n        if exc_type is asyncio.CancelledError and self._state == _State.TIMEOUT:\n            assert self._task is not None\n            _uncancel_task(self._task)\n            self._timeout_handler = None\n            self._task = None\n>           raise asyncio.TimeoutError\nE           asyncio.exceptions.TimeoutError\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/async_timeout/__init__.py:228: TimeoutError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1714029720253,"stop":1714029720254,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1714033024719,"stop":1714033024719,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"asyncio.exceptions.TimeoutError","statusTrace":"self = <aiohttp.client_ws.ClientWebSocketResponse object at 0x7f28c7ac57c0>\ntimeout = None\n\n    async def receive(self, timeout: Optional[float] = None) -> WSMessage:\n        while True:\n            if self._waiting is not None:\n                raise RuntimeError(\"Concurrent call to receive() is not allowed\")\n    \n            if self._closed:\n                return WS_CLOSED_MESSAGE\n            elif self._closing:\n                await self.close()\n                return WS_CLOSED_MESSAGE\n    \n            try:\n                self._waiting = self._loop.create_future()\n                try:\n                    async with async_timeout.timeout(timeout or self._receive_timeout):\n>                       msg = await self._reader.read()\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/client_ws.py:244: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/streams.py:681: in read\n    return await super().read()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <aiohttp.streams.FlowControlDataQueue object at 0x7f28c7918fa0>\n\n    async def read(self) -> _T:\n        if not self._buffer and not self._eof:\n            assert not self._waiter\n            self._waiter = self._loop.create_future()\n            try:\n>               await self._waiter\nE               asyncio.exceptions.CancelledError\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/streams.py:640: CancelledError\n\nDuring handling of the above exception, another exception occurred:\n\ntest_output_dir = '/home/runner/work/Python/Python/mypy/tests/lib/subtitle/_out/test_subtitle2speech'\n\n    def test_subtitle2speech(test_output_dir):\n        output_filepath = os.path.join(\n            test_output_dir, curr_func_name() + '.mp3'\n        )\n        # SRT文件路径\n>       subtitle2speech(Assets.ted_zh_srt, output_filepath)\n\nmypy/tests/lib/subtitle/test_subtitle2speech.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/subtitle/subtitle2speech.py:119: in subtitle2speech\n    asyncio.run(asubtitle2speech(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nmypy/lib/subtitle/subtitle2speech.py:88: in asubtitle2speech\n    async for chunk in communicate.stream():\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/edge_tts/communicate.py:420: in stream\n    async for received in websocket:\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/client_ws.py:312: in __anext__\n    msg = await self.receive()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/aiohttp/client_ws.py:244: in receive\n    msg = await self._reader.read()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/async_timeout/__init__.py:141: in __aexit__\n    self._do_exit(exc_type)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <async_timeout.Timeout object at 0x7f28c7a95900>\nexc_type = <class 'asyncio.exceptions.CancelledError'>\n\n    def _do_exit(self, exc_type: Optional[Type[BaseException]]) -> None:\n        if exc_type is asyncio.CancelledError and self._state == _State.TIMEOUT:\n            assert self._task is not None\n            _uncancel_task(self._task)\n            self._timeout_handler = None\n            self._task = None\n>           raise asyncio.TimeoutError\nE           asyncio.exceptions.TimeoutError\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/async_timeout/__init__.py:228: TimeoutError","steps":[],"attachments":[{"uid":"6784f6d3a98eaae","name":"log","source":"6784f6d3a98eaae.txt","type":"text/plain","size":73}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_output_dir::0","time":{"start":1714033080576,"stop":1714033080576,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"lib.subtitle"},{"name":"suite","value":"test_subtitle2speech"},{"name":"host","value":"fv-az1731-443"},{"name":"thread","value":"6365-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.subtitle.test_subtitle2speech"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"125c3fcce79d9419.json","parameterValues":[]}