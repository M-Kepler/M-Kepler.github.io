{"uid":"81cfd1a82264a795","name":"test_ppt_topic[QWenHelper]","fullName":"lib.llm.test_llm.TestLLM#test_ppt_topic","historyId":"40c0edefaf860ff47f02a27acc520cee","time":{"start":1720620189581,"stop":1720620193488,"duration":3907},"description":"\n        测试生成 PPT 题目\n        ","descriptionHtml":"<pre><code>    测试生成 PPT 题目\n</code></pre>\n","status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"self = <test_llm.TestLLM object at 0x7f18bb7ee730>\nllm_provider = <class 'mypy.lib.llm.qwen.helper.QWenHelper'>\n\n    def test_ppt_topic(self, llm_provider):\n        \"\"\"\n        测试生成 PPT 题目\n        \"\"\"\n        print(f'----- {llm_provider.__name__} -----')\n        topic_cnt = 3\n        llm_api: OpenAIBaseHelper = llm_provider()\n        ask_msg = NursePPT.gen_ppt_topics(topic_cnt)\n        llm_api.ask_helper.add_ask_message(message=ask_msg)\n        result = llm_api.chat()\n        print(result)\n>       result = json.loads(result)\n\nmypy/tests/lib/llm/test_llm.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f18bf24d070>\ns = '```json\\n[\\n    {\\n        \"title\": \"绿色生活：食源健康与科学饮食\",\\n        \"description\": \"探讨合理膳食、营养食谱、公筷分餐与健康生活方式\"\\n    },\\n    ...\\n    },\\n    {\\n        \"title\": \"防治前沿：心脑血管疾病与癌症防控策略\",\\n        \"description\": \"涵盖心血管疾病防治、癌症病因预防与康复知识\"\\n    }\\n]\\n```'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1720616876475,"stop":1720616876475,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1720620120821,"stop":1720620120823,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1720620621536,"stop":1720620621536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"lib.llm"},{"name":"suite","value":"test_llm"},{"name":"subSuite","value":"TestLLM"},{"name":"host","value":"fv-az1148-616"},{"name":"thread","value":"8992-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.llm.test_llm"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"llm_provider","value":"<class 'mypy.lib.llm.qwen.helper.QWenHelper'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"81cfd1a82264a795.json","parameterValues":["<class 'mypy.lib.llm.qwen.helper.QWenHelper'>"]}