{"uid":"4fd12bbd3c521a3e","name":"test_publish_app[image_article]","fullName":"lib.xiaohongshu.test_xiaohongshu_publish_app#test_publish_app","historyId":"dd976763dbbc627708495f8cf5e69694","time":{"start":1716637995595,"stop":1716637995605,"duration":10},"status":"broken","statusMessage":"Exception: 还没给 xiaohongshu 适配图文发布","statusTrace":"publish_media_type = 'image_article'\n\n    @pytest.mark.parametrize('publish_media_type', [\n        Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO],\n        ids=[Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO])\n    def test_publish_app(publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n>       XiaohongshuPublishApp(curr_dir).publish(\n            upload_filepath=Assets.video)\n\nmypy/tests/lib/xiaohongshu/test_xiaohongshu_publish_app.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_app.py:143: in publish\n    asyncio.run(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/base_events.py:647: in run_until_complete\n    return future.result()\nmypy/lib/playwright/publish_app.py:132: in async_publish\n    publish_helper = self.get_publish_helper(cookie_path=cookie_path,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.xiaohongshu.publish_app.XiaohongshuPublishApp object at 0x7fc986854d30>\ncookie_path = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/xiaohongshu/config/cookie/xiaohongshu/cookie_17688150852.json'\nupload_filepath = '/home/runner/work/github-runner/github-runner/mypy/assets/media/ted/ted.mp4'\npub_cfg = <mypy.lib.playwright.publish_config.PublishConfig object at 0x7fc9710c9a00>\n\n    def get_publish_helper(self, cookie_path: str, upload_filepath: str,\n                           pub_cfg: PublishConfig) -> BasePublishHelper:\n        if pub_cfg.media_type == Const.MEDIA_TYPE_IMG_ARTICLE:\n>           raise Exception('还没给 xiaohongshu 适配图文发布')\nE           Exception: 还没给 xiaohongshu 适配图文发布\n\nmypy/lib/xiaohongshu/publish_app.py:22: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1716627456536,"stop":1716627456536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"copy_config_to_dir","time":{"start":1716637995593,"stop":1716637995594,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"Exception: 还没给 xiaohongshu 适配图文发布","statusTrace":"publish_media_type = 'image_article'\n\n    @pytest.mark.parametrize('publish_media_type', [\n        Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO],\n        ids=[Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO])\n    def test_publish_app(publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n>       XiaohongshuPublishApp(curr_dir).publish(\n            upload_filepath=Assets.video)\n\nmypy/tests/lib/xiaohongshu/test_xiaohongshu_publish_app.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_app.py:143: in publish\n    asyncio.run(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/asyncio/base_events.py:647: in run_until_complete\n    return future.result()\nmypy/lib/playwright/publish_app.py:132: in async_publish\n    publish_helper = self.get_publish_helper(cookie_path=cookie_path,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.xiaohongshu.publish_app.XiaohongshuPublishApp object at 0x7fc986854d30>\ncookie_path = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/xiaohongshu/config/cookie/xiaohongshu/cookie_17688150852.json'\nupload_filepath = '/home/runner/work/github-runner/github-runner/mypy/assets/media/ted/ted.mp4'\npub_cfg = <mypy.lib.playwright.publish_config.PublishConfig object at 0x7fc9710c9a00>\n\n    def get_publish_helper(self, cookie_path: str, upload_filepath: str,\n                           pub_cfg: PublishConfig) -> BasePublishHelper:\n        if pub_cfg.media_type == Const.MEDIA_TYPE_IMG_ARTICLE:\n>           raise Exception('还没给 xiaohongshu 适配图文发布')\nE           Exception: 还没给 xiaohongshu 适配图文发布\n\nmypy/lib/xiaohongshu/publish_app.py:22: Exception","steps":[],"attachments":[{"uid":"8ec5f90cce857b96","name":"log","source":"8ec5f90cce857b96.txt","type":"text/plain","size":241}],"parameters":[],"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1716638021039,"stop":1716638021039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"lib.xiaohongshu"},{"name":"suite","value":"test_xiaohongshu_publish_app"},{"name":"host","value":"fv-az585-661"},{"name":"thread","value":"6665-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.xiaohongshu.test_xiaohongshu_publish_app"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"publish_media_type","value":"'image_article'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"4fd12bbd3c521a3e.json","parameterValues":["'image_article'"]}