{"uid":"c44b70bbc62d12a7","name":"test_subtitle2speech_with_video","fullName":"lib.subtitle.test_subtitle2speech#test_subtitle2speech_with_video","historyId":"8fb675b65eb584253f67a696953d1774","time":{"start":1716637480863,"stop":1716637543143,"duration":62280},"description":"\n    测试 youtube 视频字幕配音\n    ","descriptionHtml":"<pre><code>测试 youtube 视频字幕配音\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: 'FFmpegProHelper' object has no attribute '_input_video_width'","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/subtitle/_out/test_subtitle2speech'\n\n    def test_subtitle2speech_with_video(test_output_dir):\n        \"\"\"\n        测试 youtube 视频字幕配音\n        \"\"\"\n        output_speech_filepath = os.path.join(\n            test_output_dir, curr_func_name() + '.mp3'\n        )\n        output_video_filepath = os.path.join(\n            test_output_dir, curr_func_name() + '.mp4'\n        )\n    \n        # SRT文件路径\n        subtitle2speech(Assets.ted_zh_srt, output_speech_filepath)\n>       api = FFmpegProHelper(\n            input_video=Assets.ted_audio,\n            input_audio=output_speech_filepath)\n\nmypy/tests/lib/subtitle/test_subtitle2speech.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.video.ffmpeg_pro.FFmpegProHelper object at 0x7fc98684c6a0>\ninput_video = '/home/runner/work/github-runner/github-runner/mypy/assets/media/ted/ted_audio.mp4'\ninput_audio = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/subtitle/_out/test_subtitle2speech/test_subtitle2speech_with_video.mp3'\n\n    def __init__(self, input_video, input_audio=None) -> None:\n        self.video_stream = ffmpeg.input(input_video)\n        # 如果没有提供 input_audio，则从视频文件中提取音频流\n        if input_audio:\n            self.audio_stream = ffmpeg.input(input_audio)\n        else:\n            self.audio_stream = self.video_stream.audio\n        self.video_info = ffmpeg.probe(input_video)\n        # self.video_duration = float(self.video_info['streams'][0]['duration'])\n        self.video_duration = float(self.video_info['format']['duration'])\n        # 获取输入视频的音视频信息\n        for item in self.video_info['streams']:\n            if item['codec_type'] == \"video\":\n                self._input_video_stream_info = item\n                self._input_video_width = item[\"width\"]\n                self._input_video_height = item[\"height\"]\n            if item['codec_type'] == \"audio\":\n                self._input_audio_stream_info = item\n    \n        # 判断宽高比以确定屏幕方向\n>       self.is_horizontal = self._input_video_width / self._input_video_height > 1\nE       AttributeError: 'FFmpegProHelper' object has no attribute '_input_video_width'\n\nmypy/lib/video/ffmpeg_pro.py:83: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1716627456536,"stop":1716627456536,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"copy_config_to_dir","time":{"start":1716637477725,"stop":1716637477727,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"test_output_dir","time":{"start":1716637477727,"stop":1716637477727,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"testStage":{"description":"\n    测试 youtube 视频字幕配音\n    ","status":"broken","statusMessage":"AttributeError: 'FFmpegProHelper' object has no attribute '_input_video_width'","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/subtitle/_out/test_subtitle2speech'\n\n    def test_subtitle2speech_with_video(test_output_dir):\n        \"\"\"\n        测试 youtube 视频字幕配音\n        \"\"\"\n        output_speech_filepath = os.path.join(\n            test_output_dir, curr_func_name() + '.mp3'\n        )\n        output_video_filepath = os.path.join(\n            test_output_dir, curr_func_name() + '.mp4'\n        )\n    \n        # SRT文件路径\n        subtitle2speech(Assets.ted_zh_srt, output_speech_filepath)\n>       api = FFmpegProHelper(\n            input_video=Assets.ted_audio,\n            input_audio=output_speech_filepath)\n\nmypy/tests/lib/subtitle/test_subtitle2speech.py:51: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.video.ffmpeg_pro.FFmpegProHelper object at 0x7fc98684c6a0>\ninput_video = '/home/runner/work/github-runner/github-runner/mypy/assets/media/ted/ted_audio.mp4'\ninput_audio = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/subtitle/_out/test_subtitle2speech/test_subtitle2speech_with_video.mp3'\n\n    def __init__(self, input_video, input_audio=None) -> None:\n        self.video_stream = ffmpeg.input(input_video)\n        # 如果没有提供 input_audio，则从视频文件中提取音频流\n        if input_audio:\n            self.audio_stream = ffmpeg.input(input_audio)\n        else:\n            self.audio_stream = self.video_stream.audio\n        self.video_info = ffmpeg.probe(input_video)\n        # self.video_duration = float(self.video_info['streams'][0]['duration'])\n        self.video_duration = float(self.video_info['format']['duration'])\n        # 获取输入视频的音视频信息\n        for item in self.video_info['streams']:\n            if item['codec_type'] == \"video\":\n                self._input_video_stream_info = item\n                self._input_video_width = item[\"width\"]\n                self._input_video_height = item[\"height\"]\n            if item['codec_type'] == \"audio\":\n                self._input_audio_stream_info = item\n    \n        # 判断宽高比以确定屏幕方向\n>       self.is_horizontal = self._input_video_width / self._input_video_height > 1\nE       AttributeError: 'FFmpegProHelper' object has no attribute '_input_video_width'\n\nmypy/lib/video/ffmpeg_pro.py:83: AttributeError","steps":[],"attachments":[{"uid":"8bd8b14fcda9e0ef","name":"log","source":"8bd8b14fcda9e0ef.txt","type":"text/plain","size":518}],"parameters":[],"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0},"afterStages":[{"name":"test_output_dir::0","time":{"start":1716637543158,"stop":1716637543158,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0},{"name":"copy_config_to_dir::finish_callback","time":{"start":1716637543159,"stop":1716637543159,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"lib.subtitle"},{"name":"suite","value":"test_subtitle2speech"},{"name":"host","value":"fv-az585-661"},{"name":"thread","value":"6665-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.subtitle.test_subtitle2speech"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c44b70bbc62d12a7.json","parameterValues":[]}