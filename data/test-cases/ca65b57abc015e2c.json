{"uid":"ca65b57abc015e2c","name":"test_y2_downloader[video]","fullName":"lib.youtube.test_y2_downloader#test_y2_downloader","historyId":"d1a0b4889c40e956ba730446cbb448e5","time":{"start":1726830201772,"stop":1726830242238,"duration":40466},"description":"\n    测试 youtu 下载工具\n    ","descriptionHtml":"<pre><code>测试 youtu 下载工具\n</code></pre>\n","status":"broken","statusMessage":"tenacity.RetryError: RetryError[<Future at 0x7fa00fb6deb0 state=finished raised DownloadError>]","statusTrace":"self = <yt_dlp.YoutubeDL.YoutubeDL object at 0x7fa00fb6d100>\nargs = ('https://www.youtube.com/watch?v=0AVrZ5tw_SM', <yt_dlp.extractor.youtube.YoutubeIE object at 0x7fa00fb6d760>, False, {}, True)\nkwargs = {}\n\n    @functools.wraps(func)\n    def wrapper(self, *args, **kwargs):\n        while True:\n            try:\n>               return func(self, *args, **kwargs)\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1626: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1761: in __extract_info\n    ie_result = ie.extract(url)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/common.py:740: in extract\n    ie_result = self._real_extract(url)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/youtube.py:4358: in _real_extract\n    self.raise_no_formats(reason, expected=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yt_dlp.extractor.youtube.YoutubeIE object at 0x7fa00fb6d760>\nmsg = 'Sign in to confirm you’re not a bot. This helps protect our community. Learn more'\nexpected = True, video_id = None\n\n    def raise_no_formats(self, msg, expected=False, video_id=None):\n        if expected and (\n                self.get_param('ignore_no_formats_error') or self.get_param('wait_for_video')):\n            self.report_warning(msg, video_id)\n        elif isinstance(msg, ExtractorError):\n            raise msg\n        else:\n>           raise ExtractorError(msg, expected=expected, video_id=video_id)\nE           yt_dlp.utils.ExtractorError: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/common.py:1263: ExtractorError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Retrying object at 0x7f9ffac7c3d0 (stop=<tenacity.stop.stop_after_attempt object at 0x7fa01511a040>, wait=<tenacity.w...0x7fa045fcdeb0>, before=<function before_nothing at 0x7fa045fcaee0>, after=<function after_nothing at 0x7fa045fd4280>)>\nfn = <function Y2Downloader.download_video at 0x7fa015119430>\nargs = (<mypy.lib.youtube.y2_downloader.Y2Downloader object at 0x7f9ffac7c520>, 'https://www.youtube.com/watch?v=0AVrZ5tw_SM')\nkwargs = {}\nretry_state = <RetryCallState 140325511514336: attempt #5; slept for 36.0; last result: failed (DownloadError ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more)>\ndo = <tenacity.DoAttempt object at 0x7fa00fb53af0>\n\n    def __call__(\n        self,\n        fn: t.Callable[..., WrappedFnReturnT],\n        *args: t.Any,\n        **kwargs: t.Any,\n    ) -> WrappedFnReturnT:\n        self.begin()\n    \n        retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\n        while True:\n            do = self.iter(retry_state=retry_state)\n            if isinstance(do, DoAttempt):\n                try:\n>                   result = fn(*args, **kwargs)\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/youtube/y2_downloader.py:183: in download_video\n    raise ex\nmypy/lib/youtube/y2_downloader.py:157: in download_video\n    v_title, v_filepath = api.get_video(clean_download=False,\nmypy/lib/youtube/y2_video_handler.py:292: in get_video\n    y2_api = YtdlpHelper(video_url=self._video_url,\nmypy/lib/youtube/ytdlp_helper.py:75: in __init__\n    self._title, self._video_id, self._publish_date = get_video_info(\nmypy/lib/youtube/ytdlp_helper.py:62: in get_video_info\n    info_dict = ydl.extract_info(\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1615: in extract_info\n    return self.__extract_info(url, self.get_info_extractor(key), download, extra_info, process)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1644: in wrapper\n    self.report_error(str(e), e.format_traceback())\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1092: in report_error\n    self.trouble(f'{self._format_err(\"ERROR:\", self.Styles.ERROR)} {message}', *args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yt_dlp.YoutubeDL.YoutubeDL object at 0x7fa00fb6d100>\nmessage = 'ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more'\ntb = '  File \"/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/common.py\", line 740, in ...ctor/common.py\", line 1263, in raise_no_formats\\n    raise ExtractorError(msg, expected=expected, video_id=video_id)\\n'\nis_error = True\n\n    def trouble(self, message=None, tb=None, is_error=True):\n        \"\"\"Determine action to take when a download problem appears.\n    \n        Depending on if the downloader has been configured to ignore\n        download errors or not, this method may throw an exception or\n        not when errors are found, after printing the message.\n    \n        @param tb          If given, is additional traceback information\n        @param is_error    Whether to raise error according to ignorerrors\n        \"\"\"\n        if message is not None:\n            self.to_stderr(message)\n        if self.params.get('verbose'):\n            if tb is None:\n                if sys.exc_info()[0]:  # if .trouble has been called from an except block\n                    tb = ''\n                    if hasattr(sys.exc_info()[1], 'exc_info') and sys.exc_info()[1].exc_info[0]:\n                        tb += ''.join(traceback.format_exception(*sys.exc_info()[1].exc_info))\n                    tb += encode_compat_str(traceback.format_exc())\n                else:\n                    tb_data = traceback.format_list(traceback.extract_stack())\n                    tb = ''.join(tb_data)\n            if tb:\n                self.to_stderr(tb)\n        if not is_error:\n            return\n        if not self.params.get('ignoreerrors'):\n            if sys.exc_info()[0] and hasattr(sys.exc_info()[1], 'exc_info') and sys.exc_info()[1].exc_info[0]:\n                exc_info = sys.exc_info()[1].exc_info\n            else:\n                exc_info = sys.exc_info()\n>           raise DownloadError(message, exc_info)\nE           yt_dlp.utils.DownloadError: ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1031: DownloadError\n\nThe above exception was the direct cause of the following exception:\n\ntest_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/youtube/_out/test_y2_downloader'\nurl = 'https://www.youtube.com/watch?v=0AVrZ5tw_SM'\n\n    @pytest.mark.parametrize(\"url\", [\n        \"https://www.youtube.com/watch?v=0AVrZ5tw_SM\",\n        \"https://www.youtube.com/playlist?list=PL-CDIidnoXnBqgBVbf5y9Qm4y4ZKHHYUS\",\n        \"https://www.youtube.com/channel/UC4cw8Y12uIvrh8eLwGA3n8A\"],\n        ids=['video', 'playlist', 'channel'])\n    def test_y2_downloader(test_output_dir, url):\n        \"\"\"\n        测试 youtu 下载工具\n        \"\"\"\n        api = Y2Downloader(work_path=test_output_dir, url=url)\n>       api.do_download()\n\nmypy/tests/lib/youtube/test_y2_downloader.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/youtube/y2_downloader.py:280: in do_download\n    download_filepath, _, _, _ = self.download_video(self._url)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:336: in wrapped_f\n    return copy(f, *args, **kw)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:475: in __call__\n    do = self.iter(retry_state=retry_state)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:376: in iter\n    result = action(retry_state)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrs = <RetryCallState 140325511514336: attempt #5; slept for 36.0; last result: failed (DownloadError ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more)>\n\n    def exc_check(rs: \"RetryCallState\") -> None:\n        fut = t.cast(Future, rs.outcome)\n        retry_exc = self.retry_error_cls(fut)\n        if self.reraise:\n            raise retry_exc.reraise()\n>       raise retry_exc from fut.exception()\nE       tenacity.RetryError: RetryError[<Future at 0x7fa00fb6deb0 state=finished raised DownloadError>]\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:419: RetryError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1726825585676,"stop":1726825585676,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1726830201769,"stop":1726830201771,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1726830201771,"stop":1726830201771,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    测试 youtu 下载工具\n    ","status":"broken","statusMessage":"tenacity.RetryError: RetryError[<Future at 0x7fa00fb6deb0 state=finished raised DownloadError>]","statusTrace":"self = <yt_dlp.YoutubeDL.YoutubeDL object at 0x7fa00fb6d100>\nargs = ('https://www.youtube.com/watch?v=0AVrZ5tw_SM', <yt_dlp.extractor.youtube.YoutubeIE object at 0x7fa00fb6d760>, False, {}, True)\nkwargs = {}\n\n    @functools.wraps(func)\n    def wrapper(self, *args, **kwargs):\n        while True:\n            try:\n>               return func(self, *args, **kwargs)\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1626: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1761: in __extract_info\n    ie_result = ie.extract(url)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/common.py:740: in extract\n    ie_result = self._real_extract(url)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/youtube.py:4358: in _real_extract\n    self.raise_no_formats(reason, expected=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yt_dlp.extractor.youtube.YoutubeIE object at 0x7fa00fb6d760>\nmsg = 'Sign in to confirm you’re not a bot. This helps protect our community. Learn more'\nexpected = True, video_id = None\n\n    def raise_no_formats(self, msg, expected=False, video_id=None):\n        if expected and (\n                self.get_param('ignore_no_formats_error') or self.get_param('wait_for_video')):\n            self.report_warning(msg, video_id)\n        elif isinstance(msg, ExtractorError):\n            raise msg\n        else:\n>           raise ExtractorError(msg, expected=expected, video_id=video_id)\nE           yt_dlp.utils.ExtractorError: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/common.py:1263: ExtractorError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Retrying object at 0x7f9ffac7c3d0 (stop=<tenacity.stop.stop_after_attempt object at 0x7fa01511a040>, wait=<tenacity.w...0x7fa045fcdeb0>, before=<function before_nothing at 0x7fa045fcaee0>, after=<function after_nothing at 0x7fa045fd4280>)>\nfn = <function Y2Downloader.download_video at 0x7fa015119430>\nargs = (<mypy.lib.youtube.y2_downloader.Y2Downloader object at 0x7f9ffac7c520>, 'https://www.youtube.com/watch?v=0AVrZ5tw_SM')\nkwargs = {}\nretry_state = <RetryCallState 140325511514336: attempt #5; slept for 36.0; last result: failed (DownloadError ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more)>\ndo = <tenacity.DoAttempt object at 0x7fa00fb53af0>\n\n    def __call__(\n        self,\n        fn: t.Callable[..., WrappedFnReturnT],\n        *args: t.Any,\n        **kwargs: t.Any,\n    ) -> WrappedFnReturnT:\n        self.begin()\n    \n        retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\n        while True:\n            do = self.iter(retry_state=retry_state)\n            if isinstance(do, DoAttempt):\n                try:\n>                   result = fn(*args, **kwargs)\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:478: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/youtube/y2_downloader.py:183: in download_video\n    raise ex\nmypy/lib/youtube/y2_downloader.py:157: in download_video\n    v_title, v_filepath = api.get_video(clean_download=False,\nmypy/lib/youtube/y2_video_handler.py:292: in get_video\n    y2_api = YtdlpHelper(video_url=self._video_url,\nmypy/lib/youtube/ytdlp_helper.py:75: in __init__\n    self._title, self._video_id, self._publish_date = get_video_info(\nmypy/lib/youtube/ytdlp_helper.py:62: in get_video_info\n    info_dict = ydl.extract_info(\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1615: in extract_info\n    return self.__extract_info(url, self.get_info_extractor(key), download, extra_info, process)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1644: in wrapper\n    self.report_error(str(e), e.format_traceback())\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1092: in report_error\n    self.trouble(f'{self._format_err(\"ERROR:\", self.Styles.ERROR)} {message}', *args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <yt_dlp.YoutubeDL.YoutubeDL object at 0x7fa00fb6d100>\nmessage = 'ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more'\ntb = '  File \"/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/extractor/common.py\", line 740, in ...ctor/common.py\", line 1263, in raise_no_formats\\n    raise ExtractorError(msg, expected=expected, video_id=video_id)\\n'\nis_error = True\n\n    def trouble(self, message=None, tb=None, is_error=True):\n        \"\"\"Determine action to take when a download problem appears.\n    \n        Depending on if the downloader has been configured to ignore\n        download errors or not, this method may throw an exception or\n        not when errors are found, after printing the message.\n    \n        @param tb          If given, is additional traceback information\n        @param is_error    Whether to raise error according to ignorerrors\n        \"\"\"\n        if message is not None:\n            self.to_stderr(message)\n        if self.params.get('verbose'):\n            if tb is None:\n                if sys.exc_info()[0]:  # if .trouble has been called from an except block\n                    tb = ''\n                    if hasattr(sys.exc_info()[1], 'exc_info') and sys.exc_info()[1].exc_info[0]:\n                        tb += ''.join(traceback.format_exception(*sys.exc_info()[1].exc_info))\n                    tb += encode_compat_str(traceback.format_exc())\n                else:\n                    tb_data = traceback.format_list(traceback.extract_stack())\n                    tb = ''.join(tb_data)\n            if tb:\n                self.to_stderr(tb)\n        if not is_error:\n            return\n        if not self.params.get('ignoreerrors'):\n            if sys.exc_info()[0] and hasattr(sys.exc_info()[1], 'exc_info') and sys.exc_info()[1].exc_info[0]:\n                exc_info = sys.exc_info()[1].exc_info\n            else:\n                exc_info = sys.exc_info()\n>           raise DownloadError(message, exc_info)\nE           yt_dlp.utils.DownloadError: ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/yt_dlp/YoutubeDL.py:1031: DownloadError\n\nThe above exception was the direct cause of the following exception:\n\ntest_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/youtube/_out/test_y2_downloader'\nurl = 'https://www.youtube.com/watch?v=0AVrZ5tw_SM'\n\n    @pytest.mark.parametrize(\"url\", [\n        \"https://www.youtube.com/watch?v=0AVrZ5tw_SM\",\n        \"https://www.youtube.com/playlist?list=PL-CDIidnoXnBqgBVbf5y9Qm4y4ZKHHYUS\",\n        \"https://www.youtube.com/channel/UC4cw8Y12uIvrh8eLwGA3n8A\"],\n        ids=['video', 'playlist', 'channel'])\n    def test_y2_downloader(test_output_dir, url):\n        \"\"\"\n        测试 youtu 下载工具\n        \"\"\"\n        api = Y2Downloader(work_path=test_output_dir, url=url)\n>       api.do_download()\n\nmypy/tests/lib/youtube/test_y2_downloader.py:16: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/youtube/y2_downloader.py:280: in do_download\n    download_filepath, _, _, _ = self.download_video(self._url)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:336: in wrapped_f\n    return copy(f, *args, **kw)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:475: in __call__\n    do = self.iter(retry_state=retry_state)\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:376: in iter\n    result = action(retry_state)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrs = <RetryCallState 140325511514336: attempt #5; slept for 36.0; last result: failed (DownloadError ERROR: [youtube] 0AVrZ5tw_SM: Sign in to confirm you’re not a bot. This helps protect our community. Learn more)>\n\n    def exc_check(rs: \"RetryCallState\") -> None:\n        fut = t.cast(Future, rs.outcome)\n        retry_exc = self.retry_error_cls(fut)\n        if self.reraise:\n            raise retry_exc.reraise()\n>       raise retry_exc from fut.exception()\nE       tenacity.RetryError: RetryError[<Future at 0x7fa00fb6deb0 state=finished raised DownloadError>]\n\n/opt/hostedtoolcache/Python/3.9.20/x64/lib/python3.9/site-packages/tenacity/__init__.py:419: RetryError","steps":[],"attachments":[{"uid":"ba26fd4e658fd03f","name":"log","source":"ba26fd4e658fd03f.txt","type":"text/plain","size":17300}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_output_dir::0","time":{"start":1726830283945,"stop":1726830283946,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir::finish_callback","time":{"start":1726830283946,"stop":1726830283947,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"lib.youtube"},{"name":"suite","value":"test_y2_downloader"},{"name":"host","value":"fv-az654-555"},{"name":"thread","value":"9906-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.youtube.test_y2_downloader"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"url","value":"'https://www.youtube.com/watch?v=0AVrZ5tw_SM'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"ca65b57abc015e2c.json","parameterValues":["'https://www.youtube.com/watch?v=0AVrZ5tw_SM'"]}