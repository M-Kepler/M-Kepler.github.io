{"uid":"3a9303d09a3b89c2","name":"test_y2_video_handler","fullName":"lib.youtube.test_y2_handler#test_y2_video_handler","historyId":"2669b1c49b1922f099545f7769406d8e","time":{"start":1726243841096,"stop":1726243842249,"duration":1153},"description":"\n    测试 ytdlp 下载视频，并且合并音视频和字幕\n    ","descriptionHtml":"<pre><code>测试 ytdlp 下载视频，并且合并音视频和字幕\n</code></pre>\n","status":"broken","statusMessage":"urllib.error.HTTPError: HTTP Error 400: Bad Request","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/youtube/_out/test_y2_handler'\n\n    def test_y2_video_handler(test_output_dir):\n        \"\"\"\n        测试 ytdlp 下载视频，并且合并音视频和字幕\n        \"\"\"\n        url = 'https://www.youtube.com/watch?v=fVcKBox97P0'\n        y2_api = Y2VideoHandler(video_url=url,\n                                output_dir=test_output_dir,\n                                log_output=ffmpeg_log_output)\n>       y2_api.get_video()\n\nmypy/tests/lib/youtube/test_y2_handler.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/youtube/y2_handler.py:163: in get_video\n    self.download_media()\nmypy/lib/youtube/y2_handler.py:125: in download_media\n    self._download_video()\nmypy/lib/youtube/y2_handler.py:97: in _download_video\n    stream_highest_res: Stream = self._video.streams.get_highest_resolution()\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:296: in streams\n    return StreamQuery(self.fmt_streams)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:176: in fmt_streams\n    stream_manifest = extract.apply_descrambler(self.streaming_data)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:160: in streaming_data\n    self.bypass_age_gate()\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:257: in bypass_age_gate\n    innertube_response = innertube.player(self.video_id)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/innertube.py:448: in player\n    return self._call_api(endpoint, query, self.base_data)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/innertube.py:390: in _call_api\n    response = request._execute_request(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/request.py:37: in _execute_request\n    return urlopen(request, timeout=timeout)  # nosec\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:214: in urlopen\n    return opener.open(url, data, timeout)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:523: in open\n    response = meth(req, response)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:632: in http_response\n    response = self.parent.error(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:561: in error\n    return self._call_chain(*args)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:494: in _call_chain\n    result = func(*args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <urllib.request.HTTPDefaultErrorHandler object at 0x7fce64d512b0>\nreq = <urllib.request.Request object at 0x7fce6cf23a00>\nfp = <http.client.HTTPResponse object at 0x7fce64d6d700>, code = 400\nmsg = 'Bad Request', hdrs = <http.client.HTTPMessage object at 0x7fce5d6e3df0>\n\n    def http_error_default(self, req, fp, code, msg, hdrs):\n>       raise HTTPError(req.full_url, code, msg, hdrs, fp)\nE       urllib.error.HTTPError: HTTP Error 400: Bad Request\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:641: HTTPError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1726237832833,"stop":1726237832833,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1726243841093,"stop":1726243841095,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1726243841095,"stop":1726243841095,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    测试 ytdlp 下载视频，并且合并音视频和字幕\n    ","status":"broken","statusMessage":"urllib.error.HTTPError: HTTP Error 400: Bad Request","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/youtube/_out/test_y2_handler'\n\n    def test_y2_video_handler(test_output_dir):\n        \"\"\"\n        测试 ytdlp 下载视频，并且合并音视频和字幕\n        \"\"\"\n        url = 'https://www.youtube.com/watch?v=fVcKBox97P0'\n        y2_api = Y2VideoHandler(video_url=url,\n                                output_dir=test_output_dir,\n                                log_output=ffmpeg_log_output)\n>       y2_api.get_video()\n\nmypy/tests/lib/youtube/test_y2_handler.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/youtube/y2_handler.py:163: in get_video\n    self.download_media()\nmypy/lib/youtube/y2_handler.py:125: in download_media\n    self._download_video()\nmypy/lib/youtube/y2_handler.py:97: in _download_video\n    stream_highest_res: Stream = self._video.streams.get_highest_resolution()\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:296: in streams\n    return StreamQuery(self.fmt_streams)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:176: in fmt_streams\n    stream_manifest = extract.apply_descrambler(self.streaming_data)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:160: in streaming_data\n    self.bypass_age_gate()\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:257: in bypass_age_gate\n    innertube_response = innertube.player(self.video_id)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/innertube.py:448: in player\n    return self._call_api(endpoint, query, self.base_data)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/innertube.py:390: in _call_api\n    response = request._execute_request(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/request.py:37: in _execute_request\n    return urlopen(request, timeout=timeout)  # nosec\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:214: in urlopen\n    return opener.open(url, data, timeout)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:523: in open\n    response = meth(req, response)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:632: in http_response\n    response = self.parent.error(\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:561: in error\n    return self._call_chain(*args)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:494: in _call_chain\n    result = func(*args)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <urllib.request.HTTPDefaultErrorHandler object at 0x7fce64d512b0>\nreq = <urllib.request.Request object at 0x7fce6cf23a00>\nfp = <http.client.HTTPResponse object at 0x7fce64d6d700>, code = 400\nmsg = 'Bad Request', hdrs = <http.client.HTTPMessage object at 0x7fce5d6e3df0>\n\n    def http_error_default(self, req, fp, code, msg, hdrs):\n>       raise HTTPError(req.full_url, code, msg, hdrs, fp)\nE       urllib.error.HTTPError: HTTP Error 400: Bad Request\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/urllib/request.py:641: HTTPError","steps":[],"attachments":[{"uid":"51db5c916d04f0b1","name":"log","source":"51db5c916d04f0b1.txt","type":"text/plain","size":246}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1726243853327,"stop":1726243853328,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir::0","time":{"start":1726243853328,"stop":1726243853328,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"youtube"},{"name":"parentSuite","value":"lib.youtube"},{"name":"suite","value":"test_y2_handler"},{"name":"host","value":"fv-az702-656"},{"name":"thread","value":"9827-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.youtube.test_y2_handler"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["youtube"]},"source":"3a9303d09a3b89c2.json","parameterValues":[]}