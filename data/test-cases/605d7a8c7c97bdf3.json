{"uid":"605d7a8c7c97bdf3","name":"test_y2douyin_once[channel]","fullName":"apps.youtu2douyin.test_youtu2douyin#test_y2douyin_once","historyId":"5e1029e1310b384993810de9c459971e","time":{"start":1720619032116,"stop":1720619223511,"duration":191395},"status":"broken","statusMessage":"Exception: 所有待发布平台: ['douyin', 'wechat'] 都没发布成功: [['douyin', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".rNsML\")\\n'], ['wechat', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".finder-nickname\")\\n']]","statusTrace":"coll_handler = <class 'mypy.lib.youtube.core.base.YouTubeChannel'>\n\n    @pytest.mark.parametrize('coll_handler',\n                             [YouTubePlaylist, YouTubeChannel],\n                             ids=['playlist', 'channel'])\n    def test_y2douyin_once(coll_handler):\n        upd_channel_to_latest(\n            record_file_dir=os.path.join(curr_dir, 'config'),\n            coll_handler=coll_handler)\n>       main(run_mod=Config.RUN_MOD_ONCE,\n             coll_handler=coll_handler,\n             work_path=curr_dir)\n\nmypy/tests/apps/youtu2douyin/test_youtu2douyin.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/main.py:47: in main\n    api.do_once()\nmypy/apps/youtu2douyin/channel_loop.py:341: in do_once\n    self._download_video_and_publish(channel_videos=to_publish_videos,\nmypy/apps/youtu2douyin/channel_loop.py:186: in _download_video_and_publish\n    self._publish_video(every_video, video_fullpath, video_title, gen,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.apps.youtu2douyin.channel_loop.ChannelLoop object at 0x7f1873993d00>\nevery_video = {'id': 'RSbi3BC-N9k', 'publish_date': '2023-10-06 00:00:00', 'published': [], 'title': 'Changing the future, one student voice at a time #shorts', ...}\nvideo_fullpath = '/home/runner/work/github-runner/github-runner/mypy/tests/apps/youtu2douyin/_out/channel_UCsooa4yRKGN_zEE8iknghZA/RSbi3BC-N9k.mp4'\nvideo_title = '改变未来，一次一个学生的声音'\ngen = <generator object DatetimeUtil.random_time_generator at 0x7f188458cf20>\nfirst_video_published = [False], to_publish_platforms = ['douyin', 'wechat']\nchannel_pub_cfg = <mypy.lib.playwright.publish_config.PublishConfig object at 0x7f18739935e0>\nchannel_cfg = {'channel_name': 'TED-Ed', 'channel_url': 'https://www.youtube.com/channel/UCsooa4yRKGN_zEE8iknghZA', 'enable': True, ...g': {'collection_name': 'TED-ED（中英字幕）', 'description': '#TED #四六级 #英语口语 #雅思', 'latest_publish_time': '0429-1504'}, ...}\npublish_cfg = {'collection_name': 'TED-ED（中英字幕）', 'description': '#TED #四六级 #英语口语 #雅思', 'latest_publish_time': '0429-1504'}\nupload_record = {'channels': [{'channel_name': 'TED-Ed', 'channel_url': 'https://www.youtube.com/channel/UCsooa4yRKGN_zEE8iknghZA', 'e...KRN/USRN学习资料', 'description': '#HKRN #护士懂护士 #护士长', 'latest_publish_time': '0512-1205', 'publish_mod': 'timing'}, ...}]}\n\n    def _publish_video(self, every_video, video_fullpath, video_title, gen,\n                       first_video_published, to_publish_platforms, channel_pub_cfg,\n                       channel_cfg, publish_cfg, upload_record):\n    \n        LOG.debug('----- 视频信息: %s', every_video)\n        publish_handler = PublishHandler(publish_files=video_fullpath,\n                                         work_path=self._work_path)\n    \n        # 第一个视频立即发布，后续的再定时发布\n        # first_video_published 有问题，上层是值传递的，每次到这里这个值都是 False\n        # 现在改成 list 让他支持引用传递\n        if Config.pulibsh_first_video_now and not first_video_published[0]:\n            LOG.info('立即发布监控到的第一条视频《%s》', video_title)\n            channel_pub_cfg.publish_mod = Const.PUBLISH_NOW\n            channel_pub_cfg.publish_time = datetime.now()\n            first_video_published[0] = True\n        else:\n            # 定时发布，获取下一个发布时间\n            channel_pub_cfg.publish_mod = channel_cfg.get(\n                'publish_mod', Const.PUBLISH_TIMING)\n            channel_pub_cfg.publish_time = next(gen)\n        # 设置发布标题（默认使用视频文件名作为标题）\n        channel_pub_cfg.title = video_title\n        channel_pub_cfg.to_platforms = to_publish_platforms\n        # 返回个平台的发布结果, [['douyin', True, ''], ['wechat', False, 'exception']]\n        publish_result = publish_handler.publish(channel_pub_cfg)\n    \n        publish_fail_cnt = 0\n        for (platform, is_pub_ok, exp_msg) in publish_result:\n            # 要求全平台都成功，否则抛异常\n            if Config.assert_all_plt_success and not is_pub_ok:\n                err_msg = f'要求全平台必须成功，但是发布到 [{platform}] 平台失败: {exp_msg}'\n                raise Exception(err_msg)\n    \n            # 如果任一平台都没发布不成功，就要去解决问题，不用继续处理下一个发布了\n            publish_fail_cnt += 0 if is_pub_ok else 1\n            if publish_fail_cnt == len(to_publish_platforms):\n                err_msg = f'所有待发布平台: {to_publish_platforms} 都没发布成功: {publish_result}'\n>               raise Exception(err_msg)\nE               Exception: 所有待发布平台: ['douyin', 'wechat'] 都没发布成功: [['douyin', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".rNsML\")\\n'], ['wechat', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".finder-nickname\")\\n']]\n\nmypy/apps/youtu2douyin/channel_loop.py:105: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1720616876475,"stop":1720616876475,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1720618390525,"stop":1720618390526,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"Exception: 所有待发布平台: ['douyin', 'wechat'] 都没发布成功: [['douyin', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".rNsML\")\\n'], ['wechat', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".finder-nickname\")\\n']]","statusTrace":"coll_handler = <class 'mypy.lib.youtube.core.base.YouTubeChannel'>\n\n    @pytest.mark.parametrize('coll_handler',\n                             [YouTubePlaylist, YouTubeChannel],\n                             ids=['playlist', 'channel'])\n    def test_y2douyin_once(coll_handler):\n        upd_channel_to_latest(\n            record_file_dir=os.path.join(curr_dir, 'config'),\n            coll_handler=coll_handler)\n>       main(run_mod=Config.RUN_MOD_ONCE,\n             coll_handler=coll_handler,\n             work_path=curr_dir)\n\nmypy/tests/apps/youtu2douyin/test_youtu2douyin.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/main.py:47: in main\n    api.do_once()\nmypy/apps/youtu2douyin/channel_loop.py:341: in do_once\n    self._download_video_and_publish(channel_videos=to_publish_videos,\nmypy/apps/youtu2douyin/channel_loop.py:186: in _download_video_and_publish\n    self._publish_video(every_video, video_fullpath, video_title, gen,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.apps.youtu2douyin.channel_loop.ChannelLoop object at 0x7f1873993d00>\nevery_video = {'id': 'RSbi3BC-N9k', 'publish_date': '2023-10-06 00:00:00', 'published': [], 'title': 'Changing the future, one student voice at a time #shorts', ...}\nvideo_fullpath = '/home/runner/work/github-runner/github-runner/mypy/tests/apps/youtu2douyin/_out/channel_UCsooa4yRKGN_zEE8iknghZA/RSbi3BC-N9k.mp4'\nvideo_title = '改变未来，一次一个学生的声音'\ngen = <generator object DatetimeUtil.random_time_generator at 0x7f188458cf20>\nfirst_video_published = [False], to_publish_platforms = ['douyin', 'wechat']\nchannel_pub_cfg = <mypy.lib.playwright.publish_config.PublishConfig object at 0x7f18739935e0>\nchannel_cfg = {'channel_name': 'TED-Ed', 'channel_url': 'https://www.youtube.com/channel/UCsooa4yRKGN_zEE8iknghZA', 'enable': True, ...g': {'collection_name': 'TED-ED（中英字幕）', 'description': '#TED #四六级 #英语口语 #雅思', 'latest_publish_time': '0429-1504'}, ...}\npublish_cfg = {'collection_name': 'TED-ED（中英字幕）', 'description': '#TED #四六级 #英语口语 #雅思', 'latest_publish_time': '0429-1504'}\nupload_record = {'channels': [{'channel_name': 'TED-Ed', 'channel_url': 'https://www.youtube.com/channel/UCsooa4yRKGN_zEE8iknghZA', 'e...KRN/USRN学习资料', 'description': '#HKRN #护士懂护士 #护士长', 'latest_publish_time': '0512-1205', 'publish_mod': 'timing'}, ...}]}\n\n    def _publish_video(self, every_video, video_fullpath, video_title, gen,\n                       first_video_published, to_publish_platforms, channel_pub_cfg,\n                       channel_cfg, publish_cfg, upload_record):\n    \n        LOG.debug('----- 视频信息: %s', every_video)\n        publish_handler = PublishHandler(publish_files=video_fullpath,\n                                         work_path=self._work_path)\n    \n        # 第一个视频立即发布，后续的再定时发布\n        # first_video_published 有问题，上层是值传递的，每次到这里这个值都是 False\n        # 现在改成 list 让他支持引用传递\n        if Config.pulibsh_first_video_now and not first_video_published[0]:\n            LOG.info('立即发布监控到的第一条视频《%s》', video_title)\n            channel_pub_cfg.publish_mod = Const.PUBLISH_NOW\n            channel_pub_cfg.publish_time = datetime.now()\n            first_video_published[0] = True\n        else:\n            # 定时发布，获取下一个发布时间\n            channel_pub_cfg.publish_mod = channel_cfg.get(\n                'publish_mod', Const.PUBLISH_TIMING)\n            channel_pub_cfg.publish_time = next(gen)\n        # 设置发布标题（默认使用视频文件名作为标题）\n        channel_pub_cfg.title = video_title\n        channel_pub_cfg.to_platforms = to_publish_platforms\n        # 返回个平台的发布结果, [['douyin', True, ''], ['wechat', False, 'exception']]\n        publish_result = publish_handler.publish(channel_pub_cfg)\n    \n        publish_fail_cnt = 0\n        for (platform, is_pub_ok, exp_msg) in publish_result:\n            # 要求全平台都成功，否则抛异常\n            if Config.assert_all_plt_success and not is_pub_ok:\n                err_msg = f'要求全平台必须成功，但是发布到 [{platform}] 平台失败: {exp_msg}'\n                raise Exception(err_msg)\n    \n            # 如果任一平台都没发布不成功，就要去解决问题，不用继续处理下一个发布了\n            publish_fail_cnt += 0 if is_pub_ok else 1\n            if publish_fail_cnt == len(to_publish_platforms):\n                err_msg = f'所有待发布平台: {to_publish_platforms} 都没发布成功: {publish_result}'\n>               raise Exception(err_msg)\nE               Exception: 所有待发布平台: ['douyin', 'wechat'] 都没发布成功: [['douyin', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".rNsML\")\\n'], ['wechat', False, 'Page.inner_text: Timeout 120000ms exceeded.\\nCall log:\\nwaiting for locator(\".finder-nickname\")\\n']]\n\nmypy/apps/youtu2douyin/channel_loop.py:105: Exception","steps":[],"attachments":[{"uid":"6f621827acc7b170","name":"log","source":"6f621827acc7b170.txt","type":"text/plain","size":16924}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1720619223537,"stop":1720619223538,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"app"},{"name":"parentSuite","value":"apps.youtu2douyin"},{"name":"suite","value":"test_youtu2douyin"},{"name":"host","value":"fv-az1148-616"},{"name":"thread","value":"8992-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.youtu2douyin.test_youtu2douyin"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"coll_handler","value":"<class 'mypy.lib.youtube.core.base.YouTubeChannel'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["app"]},"source":"605d7a8c7c97bdf3.json","parameterValues":["<class 'mypy.lib.youtube.core.base.YouTubeChannel'>"]}