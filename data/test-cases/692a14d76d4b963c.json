{"uid":"692a14d76d4b963c","name":"test_xiaohongshu_publisher","fullName":"lib.xiaohongshu.test_xiaohongshu_publisher#test_xiaohongshu_publisher","historyId":"d160daff2dc8275233aabe003b7137b1","time":{"start":1713691257002,"stop":1713691428613,"duration":171611},"status":"broken","statusMessage":"tenacity.RetryError: RetryError[<Future at 0x7f557d0baa30 state=finished raised TimeoutError>]","statusTrace":"self = <mypy.lib.xiaohongshu.publisher.XiaohongshuPublishHelper object at 0x7f557c98d430>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        async for attempt in AsyncRetrying(\n                stop=stop_after_attempt(\n                    XiaohongshuLoginCfg().login_chk_retry_cnt),\n                wait=wait_fixed(XiaohongshuLoginCfg().login_chk_interval),\n                retry=retry_if_exception_type(PlwTimeoutError),\n                before_sleep=before_sleep_log(LOG, logging.WARNING)):\n            with attempt:\n                async with async_playwright() as playwright:\n>                   await self.publish_mission(playwright)\n\nmypy/lib/xiaohongshu/publisher.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/xiaohongshu/publisher.py:87: in publish_mission\n    raise ex\nmypy/lib/xiaohongshu/publisher.py:50: in publish_mission\n    await file_input_locator.wait_for(state=\"visible\")\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/async_api/_generated.py:17086: in wait_for\n    await self._impl_obj.wait_for(timeout=timeout, state=state)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_locator.py:667: in wait_for\n    await self._frame.wait_for_selector(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7f55688b1d60>\ncb = <function Channel.send.<locals>.<lambda> at 0x7f557c93aca0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\".upload-input\") to be visible\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:513: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\n    def test_xiaohongshu_publisher():\n>       XiaohongshuPublishApp(curr_dir).publish(Assets.video)\n\nmypy/tests/lib/xiaohongshu/test_xiaohongshu_publisher.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/xiaohongshu/publisher.py:155: in publish\n    asyncio.run(app.do_publish())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nmypy/lib/xiaohongshu/publisher.py:96: in do_publish\n    async for attempt in AsyncRetrying(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/_asyncio.py:71: in __anext__\n    do = self.iter(retry_state=self._retry_state)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AsyncRetrying object at 0x7f55687b46d0 (stop=<tenacity.stop.stop_after_attempt object at 0x7f557cfe25e0>, wait=<tenac...0x7f55687b4340>, before=<function before_nothing at 0x7f55705ed820>, after=<function after_nothing at 0x7f55705edaf0>)>\nretry_state = <RetryCallState 140004801859344: attempt #5; slept for 12.0; last result: failed (TimeoutError Locator.wait_for: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\".upload-input\") to be visible\n)>\n\n    def iter(self, retry_state: \"RetryCallState\") -> t.Union[DoAttempt, DoSleep, t.Any]:  # noqa\n        fut = retry_state.outcome\n        if fut is None:\n            if self.before is not None:\n                self.before(retry_state)\n            return DoAttempt()\n    \n        is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\n        if not (is_explicit_retry or self.retry(retry_state)):\n            return fut.result()\n    \n        if self.after is not None:\n            self.after(retry_state)\n    \n        self.statistics[\"delay_since_first_attempt\"] = retry_state.seconds_since_start\n        if self.stop(retry_state):\n            if self.retry_error_callback:\n                return self.retry_error_callback(retry_state)\n            retry_exc = self.retry_error_cls(fut)\n            if self.reraise:\n                raise retry_exc.reraise()\n>           raise retry_exc from fut.exception()\nE           tenacity.RetryError: RetryError[<Future at 0x7f557d0baa30 state=finished raised TimeoutError>]\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/__init__.py:326: RetryError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1713685508710,"stop":1713685508711,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"tenacity.RetryError: RetryError[<Future at 0x7f557d0baa30 state=finished raised TimeoutError>]","statusTrace":"self = <mypy.lib.xiaohongshu.publisher.XiaohongshuPublishHelper object at 0x7f557c98d430>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        async for attempt in AsyncRetrying(\n                stop=stop_after_attempt(\n                    XiaohongshuLoginCfg().login_chk_retry_cnt),\n                wait=wait_fixed(XiaohongshuLoginCfg().login_chk_interval),\n                retry=retry_if_exception_type(PlwTimeoutError),\n                before_sleep=before_sleep_log(LOG, logging.WARNING)):\n            with attempt:\n                async with async_playwright() as playwright:\n>                   await self.publish_mission(playwright)\n\nmypy/lib/xiaohongshu/publisher.py:104: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/xiaohongshu/publisher.py:87: in publish_mission\n    raise ex\nmypy/lib/xiaohongshu/publisher.py:50: in publish_mission\n    await file_input_locator.wait_for(state=\"visible\")\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/async_api/_generated.py:17086: in wait_for\n    await self._impl_obj.wait_for(timeout=timeout, state=state)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_locator.py:667: in wait_for\n    await self._frame.wait_for_selector(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7f55688b1d60>\ncb = <function Channel.send.<locals>.<lambda> at 0x7f557c93aca0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.wait_for: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\".upload-input\") to be visible\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:513: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\n    def test_xiaohongshu_publisher():\n>       XiaohongshuPublishApp(curr_dir).publish(Assets.video)\n\nmypy/tests/lib/xiaohongshu/test_xiaohongshu_publisher.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/xiaohongshu/publisher.py:155: in publish\n    asyncio.run(app.do_publish())\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nmypy/lib/xiaohongshu/publisher.py:96: in do_publish\n    async for attempt in AsyncRetrying(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/_asyncio.py:71: in __anext__\n    do = self.iter(retry_state=self._retry_state)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <AsyncRetrying object at 0x7f55687b46d0 (stop=<tenacity.stop.stop_after_attempt object at 0x7f557cfe25e0>, wait=<tenac...0x7f55687b4340>, before=<function before_nothing at 0x7f55705ed820>, after=<function after_nothing at 0x7f55705edaf0>)>\nretry_state = <RetryCallState 140004801859344: attempt #5; slept for 12.0; last result: failed (TimeoutError Locator.wait_for: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\".upload-input\") to be visible\n)>\n\n    def iter(self, retry_state: \"RetryCallState\") -> t.Union[DoAttempt, DoSleep, t.Any]:  # noqa\n        fut = retry_state.outcome\n        if fut is None:\n            if self.before is not None:\n                self.before(retry_state)\n            return DoAttempt()\n    \n        is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\n        if not (is_explicit_retry or self.retry(retry_state)):\n            return fut.result()\n    \n        if self.after is not None:\n            self.after(retry_state)\n    \n        self.statistics[\"delay_since_first_attempt\"] = retry_state.seconds_since_start\n        if self.stop(retry_state):\n            if self.retry_error_callback:\n                return self.retry_error_callback(retry_state)\n            retry_exc = self.retry_error_cls(fut)\n            if self.reraise:\n                raise retry_exc.reraise()\n>           raise retry_exc from fut.exception()\nE           tenacity.RetryError: RetryError[<Future at 0x7f557d0baa30 state=finished raised TimeoutError>]\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/__init__.py:326: RetryError","steps":[],"attachments":[{"uid":"10bdde5e2248cbf5","name":"log","source":"10bdde5e2248cbf5.txt","type":"text/plain","size":9221}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"lib.xiaohongshu"},{"name":"suite","value":"test_xiaohongshu_publisher"},{"name":"host","value":"fv-az1668-341"},{"name":"thread","value":"7178-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.xiaohongshu.test_xiaohongshu_publisher"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"692a14d76d4b963c.json","parameterValues":[]}