{"uid":"a2ad3bd29c8c358","name":"test_add_title","fullName":"lib.image.test_image_handler#test_add_title","historyId":"05f016f65a16a242b9738446e113bf8c","time":{"start":1715520771268,"stop":1715520771269,"duration":1},"description":"\n    图片上添加标题\n    ","descriptionHtml":"<pre><code>图片上添加标题\n</code></pre>\n","status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute '__array_interface__'","statusTrace":"test_output_dir = '/home/runner/work/Python/Python/mypy/tests/lib/image/_out/test_image_handler'\n\n    def test_add_title(test_output_dir):\n        \"\"\"\n        图片上添加标题\n        \"\"\"\n        output_img = os.path.join(test_output_dir, \"with_title.jpg\")\n        image_handler = ImageHandler(image_path=Assets.image,\n                                     output_path=output_img)\n    \n>       image_handler.add_title(title='哈' * 30,\n                                font_path=Assets.title_font)\n\nmypy/tests/lib/image/test_image_handler.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/image/image_handler.py:56: in add_title\n    imgpil = Image.fromarray(img)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nobj = None, mode = None\n\n    def fromarray(obj, mode=None):\n        \"\"\"\n        Creates an image memory from an object exporting the array interface\n        (using the buffer protocol)::\n    \n          from PIL import Image\n          import numpy as np\n          a = np.zeros((5, 5))\n          im = Image.fromarray(a)\n    \n        If ``obj`` is not contiguous, then the ``tobytes`` method is called\n        and :py:func:`~PIL.Image.frombuffer` is used.\n    \n        In the case of NumPy, be aware that Pillow modes do not always correspond\n        to NumPy dtypes. Pillow modes only offer 1-bit pixels, 8-bit pixels,\n        32-bit signed integer pixels, and 32-bit floating point pixels.\n    \n        Pillow images can also be converted to arrays::\n    \n          from PIL import Image\n          import numpy as np\n          im = Image.open(\"hopper.jpg\")\n          a = np.asarray(im)\n    \n        When converting Pillow images to arrays however, only pixel values are\n        transferred. This means that P and PA mode images will lose their palette.\n    \n        :param obj: Object with array interface\n        :param mode: Optional mode to use when reading ``obj``. Will be determined from\n          type if ``None``.\n    \n          This will not be used to convert the data after reading, but will be used to\n          change how the data is read::\n    \n            from PIL import Image\n            import numpy as np\n            a = np.full((1, 1), 300)\n            im = Image.fromarray(a, mode=\"L\")\n            im.getpixel((0, 0))  # 44\n            im = Image.fromarray(a, mode=\"RGB\")\n            im.getpixel((0, 0))  # (44, 1, 0)\n    \n          See: :ref:`concept-modes` for general information about modes.\n        :returns: An image object.\n    \n        .. versionadded:: 1.1.6\n        \"\"\"\n>       arr = obj.__array_interface__\nE       AttributeError: 'NoneType' object has no attribute '__array_interface__'\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/PIL/Image.py:3119: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1715519457720,"stop":1715519457720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1715520771266,"stop":1715520771267,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1715520771267,"stop":1715520771268,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    图片上添加标题\n    ","status":"broken","statusMessage":"AttributeError: 'NoneType' object has no attribute '__array_interface__'","statusTrace":"test_output_dir = '/home/runner/work/Python/Python/mypy/tests/lib/image/_out/test_image_handler'\n\n    def test_add_title(test_output_dir):\n        \"\"\"\n        图片上添加标题\n        \"\"\"\n        output_img = os.path.join(test_output_dir, \"with_title.jpg\")\n        image_handler = ImageHandler(image_path=Assets.image,\n                                     output_path=output_img)\n    \n>       image_handler.add_title(title='哈' * 30,\n                                font_path=Assets.title_font)\n\nmypy/tests/lib/image/test_image_handler.py:22: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/image/image_handler.py:56: in add_title\n    imgpil = Image.fromarray(img)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nobj = None, mode = None\n\n    def fromarray(obj, mode=None):\n        \"\"\"\n        Creates an image memory from an object exporting the array interface\n        (using the buffer protocol)::\n    \n          from PIL import Image\n          import numpy as np\n          a = np.zeros((5, 5))\n          im = Image.fromarray(a)\n    \n        If ``obj`` is not contiguous, then the ``tobytes`` method is called\n        and :py:func:`~PIL.Image.frombuffer` is used.\n    \n        In the case of NumPy, be aware that Pillow modes do not always correspond\n        to NumPy dtypes. Pillow modes only offer 1-bit pixels, 8-bit pixels,\n        32-bit signed integer pixels, and 32-bit floating point pixels.\n    \n        Pillow images can also be converted to arrays::\n    \n          from PIL import Image\n          import numpy as np\n          im = Image.open(\"hopper.jpg\")\n          a = np.asarray(im)\n    \n        When converting Pillow images to arrays however, only pixel values are\n        transferred. This means that P and PA mode images will lose their palette.\n    \n        :param obj: Object with array interface\n        :param mode: Optional mode to use when reading ``obj``. Will be determined from\n          type if ``None``.\n    \n          This will not be used to convert the data after reading, but will be used to\n          change how the data is read::\n    \n            from PIL import Image\n            import numpy as np\n            a = np.full((1, 1), 300)\n            im = Image.fromarray(a, mode=\"L\")\n            im.getpixel((0, 0))  # 44\n            im = Image.fromarray(a, mode=\"RGB\")\n            im.getpixel((0, 0))  # (44, 1, 0)\n    \n          See: :ref:`concept-modes` for general information about modes.\n        :returns: An image object.\n    \n        .. versionadded:: 1.1.6\n        \"\"\"\n>       arr = obj.__array_interface__\nE       AttributeError: 'NoneType' object has no attribute '__array_interface__'\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/PIL/Image.py:3119: AttributeError","steps":[],"attachments":[{"uid":"a27a2f9bd751bc10","name":"log","source":"a27a2f9bd751bc10.txt","type":"text/plain","size":149}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_output_dir::0","time":{"start":1715520771337,"stop":1715520771338,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir::finish_callback","time":{"start":1715520771338,"stop":1715520771338,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"image"},{"name":"parentSuite","value":"lib.image"},{"name":"suite","value":"test_image_handler"},{"name":"host","value":"fv-az926-195"},{"name":"thread","value":"6423-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.image.test_image_handler"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["image"]},"source":"a2ad3bd29c8c358.json","parameterValues":[]}