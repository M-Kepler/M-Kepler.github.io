{"uid":"947a5a93eb769cf","name":"test_y2douyin_once","fullName":"apps.youtu2douyin.test_youtu2douyin#test_y2douyin_once","historyId":"718ff6673dce4cc3c0c388971fa0f393","time":{"start":1715520550822,"stop":1715520552974,"duration":2152},"status":"broken","statusMessage":"TypeError: Object of type datetime is not JSON serializable","statusTrace":"@pytest.mark.app\n    @pytest.mark.douyin\n    def test_y2douyin_once():\n>       upd_channel_to_latest(os.path.join(\n            curr_dir, 'config', 'record.json'))\n\nmypy/tests/apps/youtu2douyin/test_youtu2douyin.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/tools.py:67: in upd_channel_to_latest\n    record_api.update(records)\nmypy/utils/json_config.py:56: in update\n    self.write(old_content)\nmypy/utils/json_config.py:40: in write\n    json.dump(content, fd, indent=4, ensure_ascii=False)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/__init__.py:179: in dump\n    for chunk in iterable:\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:431: in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:405: in _iterencode_dict\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:325: in _iterencode_list\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:405: in _iterencode_dict\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:325: in _iterencode_list\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:405: in _iterencode_dict\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:438: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x7fabbca812e0>\no = datetime.datetime(2024, 5, 7, 0, 0)\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type datetime is not JSON serializable\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:179: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1715519457720,"stop":1715519457720,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1715520181723,"stop":1715520181724,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"TypeError: Object of type datetime is not JSON serializable","statusTrace":"@pytest.mark.app\n    @pytest.mark.douyin\n    def test_y2douyin_once():\n>       upd_channel_to_latest(os.path.join(\n            curr_dir, 'config', 'record.json'))\n\nmypy/tests/apps/youtu2douyin/test_youtu2douyin.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/tools.py:67: in upd_channel_to_latest\n    record_api.update(records)\nmypy/utils/json_config.py:56: in update\n    self.write(old_content)\nmypy/utils/json_config.py:40: in write\n    json.dump(content, fd, indent=4, ensure_ascii=False)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/__init__.py:179: in dump\n    for chunk in iterable:\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:431: in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:405: in _iterencode_dict\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:325: in _iterencode_list\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:405: in _iterencode_dict\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:325: in _iterencode_list\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:405: in _iterencode_dict\n    yield from chunks\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:438: in _iterencode\n    o = _default(o)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.encoder.JSONEncoder object at 0x7fabbca812e0>\no = datetime.datetime(2024, 5, 7, 0, 0)\n\n    def default(self, o):\n        \"\"\"Implement this method in a subclass such that it returns\n        a serializable object for ``o``, or calls the base implementation\n        (to raise a ``TypeError``).\n    \n        For example, to support arbitrary iterators, you could\n        implement default like this::\n    \n            def default(self, o):\n                try:\n                    iterable = iter(o)\n                except TypeError:\n                    pass\n                else:\n                    return list(iterable)\n                # Let the base class default method raise the TypeError\n                return JSONEncoder.default(self, o)\n    \n        \"\"\"\n>       raise TypeError(f'Object of type {o.__class__.__name__} '\n                        f'is not JSON serializable')\nE       TypeError: Object of type datetime is not JSON serializable\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/json/encoder.py:179: TypeError","steps":[],"attachments":[{"uid":"c505ba5b99113ae2","name":"log","source":"c505ba5b99113ae2.txt","type":"text/plain","size":400}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1715520553044,"stop":1715520553045,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"douyin"},{"name":"tag","value":"app"},{"name":"parentSuite","value":"apps.youtu2douyin"},{"name":"suite","value":"test_youtu2douyin"},{"name":"host","value":"fv-az926-195"},{"name":"thread","value":"6423-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.youtu2douyin.test_youtu2douyin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["app","douyin"]},"source":"947a5a93eb769cf.json","parameterValues":[]}