{"uid":"181475d2359aa7f1","name":"test_y2douyin_once[playlist]","fullName":"apps.youtu2douyin.test_youtu2douyin#test_y2douyin_once","historyId":"ce404f85784e602676f6c453ae493197","time":{"start":1724806595718,"stop":1724806598678,"duration":2960},"description":"\n    检测一次 youtube 的频道\n    ","descriptionHtml":"<pre><code>检测一次 youtube 的频道\n</code></pre>\n","status":"broken","statusMessage":"pytube.exceptions.PytubeError: Exception while accessing title of https://youtube.com/watch?v=0LQw4Px7J_g. Please file a bug report at https://github.com/pytube/pytube","statusTrace":"self = <pytube.__main__.YouTube object: videoId=0LQw4Px7J_g>\n\n    @property\n    def title(self) -> str:\n        \"\"\"Get the video title.\n    \n        :rtype: str\n        \"\"\"\n        if self._title:\n            return self._title\n    \n        try:\n>           self._title = self.vid_info['videoDetails']['title']\nE           KeyError: 'videoDetails'\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:341: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\ncoll_handler = <class 'mypy.lib.youtube.core.base.YouTubePlaylist'>\n\n    @pytest.mark.parametrize('coll_handler',\n                             [YouTubePlaylist, YouTubeChannel],\n                             ids=['playlist', 'channel'])\n    def test_y2douyin_once(coll_handler):\n        \"\"\"\n        检测一次 youtube 的频道\n        \"\"\"\n        upd_channel_to_latest(\n            record_file_dir=os.path.join(curr_dir, 'config'),\n            coll_handler=coll_handler)\n>       main(run_mod=Config.RUN_MOD_ONCE,\n             coll_handler=coll_handler,\n             work_path=curr_dir)\n\nmypy/tests/apps/youtu2douyin/test_youtu2douyin.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/main.py:47: in main\n    api.do_once()\nmypy/apps/youtu2douyin/channel_loop.py:303: in do_once\n    new_channel_videos = self._collect_channel_medias(\nmypy/apps/youtu2douyin/channel_loop.py:257: in _collect_channel_medias\n    item['title'] = YouTube(item['url']).title\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytube.__main__.YouTube object: videoId=0LQw4Px7J_g>\n\n    @property\n    def title(self) -> str:\n        \"\"\"Get the video title.\n    \n        :rtype: str\n        \"\"\"\n        if self._title:\n            return self._title\n    \n        try:\n            self._title = self.vid_info['videoDetails']['title']\n        except KeyError:\n            # Check_availability will raise the correct exception in most cases\n            #  if it doesn't, ask for a report.\n            self.check_availability()\n>           raise exceptions.PytubeError(\n                (\n                    f'Exception while accessing title of {self.watch_url}. '\n                    'Please file a bug report at https://github.com/pytube/pytube'\n                )\n            )\nE           pytube.exceptions.PytubeError: Exception while accessing title of https://youtube.com/watch?v=0LQw4Px7J_g. Please file a bug report at https://github.com/pytube/pytube\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:346: PytubeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1724804131376,"stop":1724804131376,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1724806566371,"stop":1724806566373,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"\n    检测一次 youtube 的频道\n    ","status":"broken","statusMessage":"pytube.exceptions.PytubeError: Exception while accessing title of https://youtube.com/watch?v=0LQw4Px7J_g. Please file a bug report at https://github.com/pytube/pytube","statusTrace":"self = <pytube.__main__.YouTube object: videoId=0LQw4Px7J_g>\n\n    @property\n    def title(self) -> str:\n        \"\"\"Get the video title.\n    \n        :rtype: str\n        \"\"\"\n        if self._title:\n            return self._title\n    \n        try:\n>           self._title = self.vid_info['videoDetails']['title']\nE           KeyError: 'videoDetails'\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:341: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\ncoll_handler = <class 'mypy.lib.youtube.core.base.YouTubePlaylist'>\n\n    @pytest.mark.parametrize('coll_handler',\n                             [YouTubePlaylist, YouTubeChannel],\n                             ids=['playlist', 'channel'])\n    def test_y2douyin_once(coll_handler):\n        \"\"\"\n        检测一次 youtube 的频道\n        \"\"\"\n        upd_channel_to_latest(\n            record_file_dir=os.path.join(curr_dir, 'config'),\n            coll_handler=coll_handler)\n>       main(run_mod=Config.RUN_MOD_ONCE,\n             coll_handler=coll_handler,\n             work_path=curr_dir)\n\nmypy/tests/apps/youtu2douyin/test_youtu2douyin.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/youtu2douyin/main.py:47: in main\n    api.do_once()\nmypy/apps/youtu2douyin/channel_loop.py:303: in do_once\n    new_channel_videos = self._collect_channel_medias(\nmypy/apps/youtu2douyin/channel_loop.py:257: in _collect_channel_medias\n    item['title'] = YouTube(item['url']).title\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pytube.__main__.YouTube object: videoId=0LQw4Px7J_g>\n\n    @property\n    def title(self) -> str:\n        \"\"\"Get the video title.\n    \n        :rtype: str\n        \"\"\"\n        if self._title:\n            return self._title\n    \n        try:\n            self._title = self.vid_info['videoDetails']['title']\n        except KeyError:\n            # Check_availability will raise the correct exception in most cases\n            #  if it doesn't, ask for a report.\n            self.check_availability()\n>           raise exceptions.PytubeError(\n                (\n                    f'Exception while accessing title of {self.watch_url}. '\n                    'Please file a bug report at https://github.com/pytube/pytube'\n                )\n            )\nE           pytube.exceptions.PytubeError: Exception while accessing title of https://youtube.com/watch?v=0LQw4Px7J_g. Please file a bug report at https://github.com/pytube/pytube\n\n/opt/hostedtoolcache/Python/3.9.19/x64/lib/python3.9/site-packages/pytube/__main__.py:346: PytubeError","steps":[],"attachments":[{"uid":"df134985ef4160a1","name":"log","source":"df134985ef4160a1.txt","type":"text/plain","size":1003}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1724806622064,"stop":1724806622065,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"app"},{"name":"parentSuite","value":"apps.youtu2douyin"},{"name":"suite","value":"test_youtu2douyin"},{"name":"host","value":"fv-az1535-547"},{"name":"thread","value":"8987-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.youtu2douyin.test_youtu2douyin"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"coll_handler","value":"<class 'mypy.lib.youtube.core.base.YouTubePlaylist'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["app"]},"source":"181475d2359aa7f1.json","parameterValues":["<class 'mypy.lib.youtube.core.base.YouTubePlaylist'>"]}