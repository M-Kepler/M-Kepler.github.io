{"uid":"927e24f62471dc50","name":"test_image2video","fullName":"lib.video.test_ffmpeg_pro#test_image2video","historyId":"8f22d5cf48b8650847932a528f3841ca","time":{"start":1714793056124,"stop":1714793056954,"duration":830},"status":"broken","statusMessage":"ffmpeg._run.Error: ffmpeg error (see stderr output for detail)","statusTrace":"test_output_dir = '/home/runner/work/Python/Python/mypy/tests/lib/video/_out/test_ffmpeg_pro'\n\n    def test_image2video(test_output_dir):\n        output_path = os.path.join(\n            test_output_dir, curr_func_name() + '.mp4')\n>       image2video(images_dir=Assets.ppt_slide_image_dir,\n                    audio_path=Assets.bgm,\n                    outpath_mp4=output_path,\n                    transition_type='wipeleft')\n\nmypy/tests/lib/video/test_ffmpeg_pro.py:122: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/video/ffmpeg_pro.py:88: in image2video\n    output.run(overwrite_output=True)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nstream_spec = output(acodec='aac', filename='/home/runner/work/Python/Python/mypy/tests/lib/video/_out/test_ffmpeg_pro/test_image2video.mp4', vcodec='libx264')[None] <1b3c4a5e33f0>\ncmd = 'ffmpeg', capture_stdout = False, capture_stderr = False, input = None\nquiet = False, overwrite_output = True\n\n    @output_operator()\n    def run(\n        stream_spec,\n        cmd='ffmpeg',\n        capture_stdout=False,\n        capture_stderr=False,\n        input=None,\n        quiet=False,\n        overwrite_output=False,\n    ):\n        \"\"\"Invoke ffmpeg for the supplied node graph.\n    \n        Args:\n            capture_stdout: if True, capture stdout (to be used with\n                ``pipe:`` ffmpeg outputs).\n            capture_stderr: if True, capture stderr.\n            quiet: shorthand for setting ``capture_stdout`` and ``capture_stderr``.\n            input: text to be sent to stdin (to be used with ``pipe:``\n                ffmpeg inputs)\n            **kwargs: keyword-arguments passed to ``get_args()`` (e.g.\n                ``overwrite_output=True``).\n    \n        Returns: (out, err) tuple containing captured stdout and stderr data.\n        \"\"\"\n        process = run_async(\n            stream_spec,\n            cmd,\n            pipe_stdin=input is not None,\n            pipe_stdout=capture_stdout,\n            pipe_stderr=capture_stderr,\n            quiet=quiet,\n            overwrite_output=overwrite_output,\n        )\n        out, err = process.communicate(input)\n        retcode = process.poll()\n        if retcode:\n>           raise Error('ffmpeg', out, err)\nE           ffmpeg._run.Error: ffmpeg error (see stderr output for detail)\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/ffmpeg/_run.py:325: Error","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1714789026477,"stop":1714789026478,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1714792725499,"stop":1714792725501,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1714792725501,"stop":1714792725501,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[{"name":"test_output_dir::0","time":{"start":1714793325516,"stop":1714793325516,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir::finish_callback","time":{"start":1714793325517,"stop":1714793325517,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"tag","value":"video"},{"name":"parentSuite","value":"lib.video"},{"name":"suite","value":"test_ffmpeg_pro"},{"name":"host","value":"fv-az1417-349"},{"name":"thread","value":"6457-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.video.test_ffmpeg_pro"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["video"]},"source":"927e24f62471dc50.json","parameterValues":[]}