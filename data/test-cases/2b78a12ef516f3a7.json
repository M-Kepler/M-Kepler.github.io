{"uid":"2b78a12ef516f3a7","name":"test_publish_app[video]","fullName":"lib.xiaohongshu.test_xiaohongshu_publish_app#test_publish_app","historyId":"5860579cfb5acada058368250ed76c79","time":{"start":1714926752354,"stop":1714926787135,"duration":34781},"status":"broken","statusMessage":"mypy.lib.playwright.exceptions.PublishFail: Locator.fill: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")","statusTrace":"self = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fbd386ca220>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # 判断登录状态\n            is_login = await self._check_login_status(page)\n            if not is_login:\n                return\n    \n            # 上传发布内容\n            await self.upload(page)\n    \n            # 填写信息\n>           await self.fill_publish_content(page)\n\nmypy/lib/playwright/publish_helper.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/xiaohongshu/publish_helper.py:74: in fill_publish_content\n    await page.locator(self._playwright_cfg.title_loc).fill(_publish_title)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/async_api/_generated.py:15144: in fill\n    await self._impl_obj.fill(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_locator.py:205: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_frame.py:527: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fbd390592b0>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fbd388aeb80>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:513: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n>           async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(\n                        LoginLocator.login_chk_retry_cnt),\n                    wait=wait_fixed(LoginLocator.login_chk_interval),\n                    retry=retry_if_exception_type(PlwTimeoutError),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n\nmypy/lib/playwright/publish_helper.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/_asyncio.py:71: in __anext__\n    do = self.iter(retry_state=self._retry_state)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/__init__.py:314: in iter\n    return fut.result()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/concurrent/futures/_base.py:437: in result\n    return self.__get_result()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/concurrent/futures/_base.py:389: in __get_result\n    raise self._exception\nmypy/lib/playwright/publish_helper.py:156: in do_publish\n    await self.publish_mission(playwright)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fbd386ca220>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # 判断登录状态\n            is_login = await self._check_login_status(page)\n            if not is_login:\n                return\n    \n            # 上传发布内容\n            await self.upload(page)\n    \n            # 填写信息\n            await self.fill_publish_content(page)\n    \n            # 触发发布并检查是否发布成功\n            await self.publish_trigger(page)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常', self._publish_title)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")\n\nmypy/lib/playwright/publish_helper.py:137: PublishFail\n\nThe above exception was the direct cause of the following exception:\n\npublish_media_type = 'video'\n\n    @pytest.mark.parametrize('publish_media_type', [\n        Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO],\n        ids=[Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO])\n    def test_publish_app(publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n>       XiaohongshuPublishApp(curr_dir).publish(\n            upload_filepath=Assets.video)\n\nmypy/tests/lib/xiaohongshu/test_xiaohongshu_publish_app.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_app.py:143: in publish\n    asyncio.run(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nmypy/lib/playwright/publish_app.py:139: in async_publish\n    await publish_helper.do_publish()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n            async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(\n                        LoginLocator.login_chk_retry_cnt),\n                    wait=wait_fixed(LoginLocator.login_chk_interval),\n                    retry=retry_if_exception_type(PlwTimeoutError),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n                with attempt:\n                    async with async_playwright() as playwright:\n                        await self.publish_mission(playwright)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常', self._publish_title)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")\n\nmypy/lib/playwright/publish_helper.py:159: PublishFail","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1714924183159,"stop":1714924183159,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false},{"name":"copy_config_to_dir","time":{"start":1714926752296,"stop":1714926752297,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"mypy.lib.playwright.exceptions.PublishFail: Locator.fill: Timeout 30000ms exceeded.\nCall log:\nwaiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")","statusTrace":"self = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fbd386ca220>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # 判断登录状态\n            is_login = await self._check_login_status(page)\n            if not is_login:\n                return\n    \n            # 上传发布内容\n            await self.upload(page)\n    \n            # 填写信息\n>           await self.fill_publish_content(page)\n\nmypy/lib/playwright/publish_helper.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/xiaohongshu/publish_helper.py:74: in fill_publish_content\n    await page.locator(self._playwright_cfg.title_loc).fill(_publish_title)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/async_api/_generated.py:15144: in fill\n    await self._impl_obj.fill(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_locator.py:205: in fill\n    return await self._frame.fill(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_frame.py:527: in fill\n    await self._channel.send(\"fill\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:59: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fbd390592b0>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fbd388aeb80>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")\n\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/playwright/_impl/_connection.py:513: TimeoutError\n\nThe above exception was the direct cause of the following exception:\n\nself = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n>           async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(\n                        LoginLocator.login_chk_retry_cnt),\n                    wait=wait_fixed(LoginLocator.login_chk_interval),\n                    retry=retry_if_exception_type(PlwTimeoutError),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n\nmypy/lib/playwright/publish_helper.py:148: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/_asyncio.py:71: in __anext__\n    do = self.iter(retry_state=self._retry_state)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/site-packages/tenacity/__init__.py:314: in iter\n    return fut.result()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/concurrent/futures/_base.py:437: in result\n    return self.__get_result()\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/concurrent/futures/_base.py:389: in __get_result\n    raise self._exception\nmypy/lib/playwright/publish_helper.py:156: in do_publish\n    await self.publish_mission(playwright)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\nplaywright = <playwright._impl._playwright.Playwright object at 0x7fbd386ca220>\n\n    async def publish_mission(self, playwright: Playwright):\n        \"\"\"\n        发布任务\n        \"\"\"\n        self._logger.info(\"=\" * 60)\n        self._logger.info('[%s] 开始执行发布任务', self.__class__.__name__)\n        self._logger.info(\"=\" * 60)\n    \n        # 浏览器上下文\n        browser, context, page = await PlaywrightCommon(\n            cookie_filepath=self._cookie_filepath,\n            headless=self._headless).launch_browser(playwright)\n        try:\n            # 判断登录状态\n            is_login = await self._check_login_status(page)\n            if not is_login:\n                return\n    \n            # 上传发布内容\n            await self.upload(page)\n    \n            # 填写信息\n            await self.fill_publish_content(page)\n    \n            # 触发发布并检查是否发布成功\n            await self.publish_trigger(page)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常', self._publish_title)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")\n\nmypy/lib/playwright/publish_helper.py:137: PublishFail\n\nThe above exception was the direct cause of the following exception:\n\npublish_media_type = 'video'\n\n    @pytest.mark.parametrize('publish_media_type', [\n        Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO],\n        ids=[Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO])\n    def test_publish_app(publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n>       XiaohongshuPublishApp(curr_dir).publish(\n            upload_filepath=Assets.video)\n\nmypy/tests/lib/xiaohongshu/test_xiaohongshu_publish_app.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/playwright/publish_app.py:143: in publish\n    asyncio.run(\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/runners.py:44: in run\n    return loop.run_until_complete(main)\n/opt/hostedtoolcache/Python/3.8.18/x64/lib/python3.8/asyncio/base_events.py:616: in run_until_complete\n    return future.result()\nmypy/lib/playwright/publish_app.py:139: in async_publish\n    await publish_helper.do_publish()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.xiaohongshu.publish_helper.XiaohongshuPublishHelper object at 0x7fbd39059100>\n\n    async def do_publish(self):\n        \"\"\"\n        发布任务，如果获取登录状态失败，则重试\n        \"\"\"\n        try:\n            async for attempt in AsyncRetrying(\n                    stop=stop_after_attempt(\n                        LoginLocator.login_chk_retry_cnt),\n                    wait=wait_fixed(LoginLocator.login_chk_interval),\n                    retry=retry_if_exception_type(PlwTimeoutError),\n                    before_sleep=before_sleep_log(self._logger, logging.WARNING)):\n                with attempt:\n                    async with async_playwright() as playwright:\n                        await self.publish_mission(playwright)\n        except Exception as ex:\n            self._logger.exception('❌❌❌《%s》发布异常', self._publish_title)\n>           raise PublishFail(original_exception=ex) from ex\nE           mypy.lib.playwright.exceptions.PublishFail: Locator.fill: Timeout 30000ms exceeded.\nE           Call log:\nE           waiting for locator(\"//*[@id=\\\"publish-container\\\"]/div/div[3]/div[2]/div[3]/input\")\n\nmypy/lib/playwright/publish_helper.py:159: PublishFail","steps":[],"attachments":[{"uid":"1af174227f73e5fb","name":"log","source":"1af174227f73e5fb.txt","type":"text/plain","size":5406}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1714926787592,"stop":1714926787593,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false}],"labels":[{"name":"parentSuite","value":"lib.xiaohongshu"},{"name":"suite","value":"test_xiaohongshu_publish_app"},{"name":"host","value":"fv-az1074-98"},{"name":"thread","value":"6428-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.xiaohongshu.test_xiaohongshu_publish_app"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"publish_media_type","value":"'video'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"2b78a12ef516f3a7.json","parameterValues":["'video'"]}