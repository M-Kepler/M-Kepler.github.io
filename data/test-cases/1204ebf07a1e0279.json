{"uid":"1204ebf07a1e0279","name":"test_ppt2douyin[image_article]","fullName":"apps.ppt2douyin.test_ppt2douyin#test_ppt2douyin","historyId":"a9458fb56e629795ad944536f1a9c902","time":{"start":1720235463969,"stop":1720235618607,"duration":154638},"status":"broken","statusMessage":"ValueError: not enough values to unpack (expected 2, got 1)","statusTrace":"publish_media_type = 'image_article'\n\n    @pytest.mark.parametrize('publish_media_type', [\n        Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO],\n        ids=[Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO])\n    def test_ppt2douyin(publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n        # WARNNING 因为要读取当前目录下的 config 文件， 所以不要传入 test_output_dir\n>       main(work_path=curr_dir)\n\nmypy/tests/apps/ppt2douyin/test_ppt2douyin.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/ppt2douyin/main.py:131: in main\n    archive_ppt_files(publish_result)\nmypy/apps/ppt2douyin/main.py:65: in archive_ppt_files\n    AliyunpanHelper().upload(local_path=publish_ppt_path,\nmypy/lib/aliyunpan/aliyunpan_helper.py:14: in __init__\n    self._env = self._get_aliyunpan_env()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.aliyunpan.aliyunpan_helper.AliyunpanHelper object at 0x7f30f826cf70>\n\n    def _get_aliyunpan_env(self):\n        # 获取 aliyunpan 服务中的 ALIYUNPAN_CONFIG_DIR 环境变量\n        try:\n            # 执行 systemctl show 命令并获取服务的环境变量\n            result = subprocess.run(\n                ['systemctl', 'show', self._env_aliyunpan_svc_name, '--property=Environment'],\n                capture_output=True,\n                text=True,\n                check=True\n            )\n    \n            # 解析输出结果\n            env_vars = result.stdout.strip().split('\\n')\n            for env_var in env_vars:\n                if env_var.startswith('Environment='):\n                    env_var_list = env_var[len('Environment='):].split(' ')\n                    for var in env_var_list:\n>                       key, value = var.split('=', 1)\nE                       ValueError: not enough values to unpack (expected 2, got 1)\n\nmypy/lib/aliyunpan/aliyunpan_helper.py:42: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1720234153647,"stop":1720234153647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1720235463967,"stop":1720235463968,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ValueError: not enough values to unpack (expected 2, got 1)","statusTrace":"publish_media_type = 'image_article'\n\n    @pytest.mark.parametrize('publish_media_type', [\n        Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO],\n        ids=[Const.MEDIA_TYPE_IMG_ARTICLE, Const.MEDIA_TYPE_VIDEO])\n    def test_ppt2douyin(publish_media_type):\n        set_publish_cfg(config_path=config_path,\n                        option='media_type',\n                        value=publish_media_type)\n    \n        # WARNNING 因为要读取当前目录下的 config 文件， 所以不要传入 test_output_dir\n>       main(work_path=curr_dir)\n\nmypy/tests/apps/ppt2douyin/test_ppt2douyin.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/apps/ppt2douyin/main.py:131: in main\n    archive_ppt_files(publish_result)\nmypy/apps/ppt2douyin/main.py:65: in archive_ppt_files\n    AliyunpanHelper().upload(local_path=publish_ppt_path,\nmypy/lib/aliyunpan/aliyunpan_helper.py:14: in __init__\n    self._env = self._get_aliyunpan_env()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.aliyunpan.aliyunpan_helper.AliyunpanHelper object at 0x7f30f826cf70>\n\n    def _get_aliyunpan_env(self):\n        # 获取 aliyunpan 服务中的 ALIYUNPAN_CONFIG_DIR 环境变量\n        try:\n            # 执行 systemctl show 命令并获取服务的环境变量\n            result = subprocess.run(\n                ['systemctl', 'show', self._env_aliyunpan_svc_name, '--property=Environment'],\n                capture_output=True,\n                text=True,\n                check=True\n            )\n    \n            # 解析输出结果\n            env_vars = result.stdout.strip().split('\\n')\n            for env_var in env_vars:\n                if env_var.startswith('Environment='):\n                    env_var_list = env_var[len('Environment='):].split(' ')\n                    for var in env_var_list:\n>                       key, value = var.split('=', 1)\nE                       ValueError: not enough values to unpack (expected 2, got 1)\n\nmypy/lib/aliyunpan/aliyunpan_helper.py:42: ValueError","steps":[],"attachments":[{"uid":"a7b670e6c6e59dd5","name":"log","source":"a7b670e6c6e59dd5.txt","type":"text/plain","size":9687}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"copy_config_to_dir::finish_callback","time":{"start":1720235779356,"stop":1720235779356,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"apps.ppt2douyin"},{"name":"suite","value":"test_ppt2douyin"},{"name":"host","value":"fv-az774-103"},{"name":"thread","value":"7994-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"apps.ppt2douyin.test_ppt2douyin"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"publish_media_type","value":"'image_article'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"1204ebf07a1e0279.json","parameterValues":["'image_article'"]}