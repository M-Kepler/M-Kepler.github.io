{"uid":"f31f466908c60d8f","name":"test_aliyunpan","fullName":"lib.aliyunpan.test_aliyunpan#test_aliyunpan","historyId":"11efda0f94e8a577231fde6753d72b05","time":{"start":1720236548055,"stop":1720236548082,"duration":27},"status":"broken","statusMessage":"ValueError: not enough values to unpack (expected 2, got 1)","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/aliyunpan/_out/test_aliyunpan'\n\n    def test_aliyunpan(test_output_dir):\n        # 测试文件\n        test_filename = 'test.txt'\n        test_filepath = os.path.join(test_output_dir, test_filename)\n        FileUtil.touch_file(test_filepath, def_content='hello world')\n    \n        # 测试上传\n        remote_dir = \"/tmp\"\n>       api = AliyunpanHelper()\n\nmypy/tests/lib/aliyunpan/test_aliyunpan.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/aliyunpan/aliyunpan_helper.py:14: in __init__\n    self._env = self._get_aliyunpan_env()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.aliyunpan.aliyunpan_helper.AliyunpanHelper object at 0x7f30f0f9ebb0>\n\n    def _get_aliyunpan_env(self):\n        # 获取 aliyunpan 服务中的 ALIYUNPAN_CONFIG_DIR 环境变量\n        try:\n            # 执行 systemctl show 命令并获取服务的环境变量\n            result = subprocess.run(\n                ['systemctl', 'show', self._env_aliyunpan_svc_name, '--property=Environment'],\n                capture_output=True,\n                text=True,\n                check=True\n            )\n    \n            # 解析输出结果\n            env_vars = result.stdout.strip().split('\\n')\n            for env_var in env_vars:\n                if env_var.startswith('Environment='):\n                    env_var_list = env_var[len('Environment='):].split(' ')\n                    for var in env_var_list:\n>                       key, value = var.split('=', 1)\nE                       ValueError: not enough values to unpack (expected 2, got 1)\n\nmypy/lib/aliyunpan/aliyunpan_helper.py:42: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"event_loop_policy","time":{"start":1720234153647,"stop":1720234153647,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir","time":{"start":1720236548053,"stop":1720236548055,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"test_output_dir","time":{"start":1720236548055,"stop":1720236548055,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"ValueError: not enough values to unpack (expected 2, got 1)","statusTrace":"test_output_dir = '/home/runner/work/github-runner/github-runner/mypy/tests/lib/aliyunpan/_out/test_aliyunpan'\n\n    def test_aliyunpan(test_output_dir):\n        # 测试文件\n        test_filename = 'test.txt'\n        test_filepath = os.path.join(test_output_dir, test_filename)\n        FileUtil.touch_file(test_filepath, def_content='hello world')\n    \n        # 测试上传\n        remote_dir = \"/tmp\"\n>       api = AliyunpanHelper()\n\nmypy/tests/lib/aliyunpan/test_aliyunpan.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmypy/lib/aliyunpan/aliyunpan_helper.py:14: in __init__\n    self._env = self._get_aliyunpan_env()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mypy.lib.aliyunpan.aliyunpan_helper.AliyunpanHelper object at 0x7f30f0f9ebb0>\n\n    def _get_aliyunpan_env(self):\n        # 获取 aliyunpan 服务中的 ALIYUNPAN_CONFIG_DIR 环境变量\n        try:\n            # 执行 systemctl show 命令并获取服务的环境变量\n            result = subprocess.run(\n                ['systemctl', 'show', self._env_aliyunpan_svc_name, '--property=Environment'],\n                capture_output=True,\n                text=True,\n                check=True\n            )\n    \n            # 解析输出结果\n            env_vars = result.stdout.strip().split('\\n')\n            for env_var in env_vars:\n                if env_var.startswith('Environment='):\n                    env_var_list = env_var[len('Environment='):].split(' ')\n                    for var in env_var_list:\n>                       key, value = var.split('=', 1)\nE                       ValueError: not enough values to unpack (expected 2, got 1)\n\nmypy/lib/aliyunpan/aliyunpan_helper.py:42: ValueError","steps":[],"attachments":[{"uid":"d7fac2352926ef98","name":"log","source":"d7fac2352926ef98.txt","type":"text/plain","size":163}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"test_output_dir::0","time":{"start":1720236548089,"stop":1720236548089,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"copy_config_to_dir::finish_callback","time":{"start":1720236548090,"stop":1720236548090,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"parentSuite","value":"lib.aliyunpan"},{"name":"suite","value":"test_aliyunpan"},{"name":"host","value":"fv-az774-103"},{"name":"thread","value":"7994-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"lib.aliyunpan.test_aliyunpan"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"f31f466908c60d8f.json","parameterValues":[]}