<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>M_Kepler</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-16T04:25:41.807Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>M_Kepler</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>记一次Segment fault</title>
    <link href="http://yoursite.com/2019/04/14/%E8%AE%B0%E4%B8%80%E6%AC%A1Segment%20fault/"/>
    <id>http://yoursite.com/2019/04/14/记一次Segment fault/</id>
    <published>2019-04-14T08:25:38.513Z</published>
    <updated>2019-04-16T04:25:41.807Z</updated>
    
    <content type="html"><![CDATA[<h1 id="重现"><a href="#重现" class="headerlink" title="重现"></a>重现</h1><ul><li><p>功能描述<br>把 <code>test.log</code> 文件每一行按照 <code>,</code> 进行切片，将一行中的所有分片存放到 <code>string</code> 数组中</p></li><li><p>样例  </p><ul><li><p><code>test.log</code> 中有很多行如下字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">home,m_kepler,project</span><br></pre></td></tr></table></figure></li><li><p>目的是按照 , 切割，把子串存放到 string 数组中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string strTmp[3];</span><br><span class="line">strTmp[0] = &quot;home&quot;</span><br><span class="line">strTmp[1] = &quot;m_kepler&quot;</span><br><span class="line">strTmp[2] = &quot;project&quot;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>出错的代码<br>这里不用 <code>strtok</code> 是因为 <code>,,</code> 也要算一个数据    </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">fstream test;</span><br><span class="line"><span class="keyword">char</span> delim[] = <span class="string">","</span>;</span><br><span class="line"><span class="built_in">string</span> strLine;</span><br><span class="line"><span class="built_in">string</span> szstrTmp [<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">test.open(<span class="string">"./debug/test.log"</span>, ios::binary | ios::in);</span><br><span class="line"><span class="keyword">if</span>(!test)</span><br><span class="line">    perror(<span class="string">"open"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(getline(test, strLine))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;    <span class="comment">// error1</span></span><br><span class="line">    <span class="keyword">char</span> *orgstr = strdup(strLine.c_str()); <span class="comment">// error2</span></span><br><span class="line">    <span class="keyword">for</span> (token = strsep(&amp;orgstr, delim); token != <span class="literal">NULL</span>; token = strsep(&amp;orgstr, delim))</span><br><span class="line">    &#123;</span><br><span class="line">        szstrTmp[i] = token;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(orgstr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></li></ul><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><ul><li><p>像下面这样把两个循环条件才出来，运行报错 <code>Segmentation fault (core dumped)</code>     </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> szstrTmp[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">while</span>(getline(test,line))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> j =<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        szstrTmp[j] = <span class="string">"aaaa"</span>; <span class="comment">// gdb 调试报错此行</span></span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 <code>while</code> 循环中使用 <code>strdup</code>，运行报错 <code>munmap_chunk(): invalid pointer</code>     </p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">string</span> szstrTmp[<span class="number">3</span>];</span><br><span class="line"><span class="keyword">while</span>(getline(test, line))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> *orgstr = strdup(line.c_str());</span><br><span class="line">    <span class="keyword">for</span> (token = strsep(&amp;orgstr, delim), i = <span class="number">0</span>; token != <span class="literal">NULL</span>, i != <span class="number">3</span>; token = strsep(&amp;orgstr, delim), i++)</span><br><span class="line">    &#123;</span><br><span class="line">        szstrTmp[i] = token;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">free</span>(orgstr); <span class="comment">// gbd 调试报错在此行</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h1><ul><li><p>不使用 <code>strdup</code> 、<code>for</code> 循环里多个条件限制</p></li><li><p>修复后的代码</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">fstream test;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;       <span class="comment">// ++++++</span></span><br><span class="line"><span class="keyword">char</span> delim[] = <span class="string">","</span>;</span><br><span class="line"><span class="built_in">string</span> strLine;</span><br><span class="line"><span class="built_in">string</span> szstrTmp [<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">test.open(<span class="string">"./debug/test.log"</span>, ios::binary | ios::in);</span><br><span class="line"><span class="keyword">if</span>(!test)</span><br><span class="line">    perror(<span class="string">"open"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(getline(test, strLine))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// int i = 0;    // error1 // ------</span></span><br><span class="line">    <span class="comment">// char *orgstr = strdup(strLine.c_str()); // error2 // ------</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">char</span> *orgstr = <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span>*&gt;(strLine.c_str());</span><br><span class="line">    <span class="comment">// for (token = strsep(&amp;orgstr, delim), i = 0; token != NULL; token = strsep(&amp;orgstr, delim)) // ------</span></span><br><span class="line">    <span class="keyword">for</span> (token = strsep(&amp;orgstr, delim), i = <span class="number">0</span>; token != <span class="literal">NULL</span>, i &lt; <span class="number">3</span>; token = strsep(&amp;orgstr, delim), i++)  <span class="comment">// ++++++</span></span><br><span class="line">    &#123;</span><br><span class="line">        szstrTmp[i] = token;</span><br><span class="line">        <span class="comment">// i++; // ------</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// free(orgstr); // ------</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;重现&quot;&gt;&lt;a href=&quot;#重现&quot; class=&quot;headerlink&quot; title=&quot;重现&quot;&gt;&lt;/a&gt;重现&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;功能描述&lt;br&gt;把 &lt;code&gt;test.log&lt;/code&gt; 文件每一行按照 &lt;code&gt;,&lt;/code&gt; 进行切片，将
      
    
    </summary>
    
      <category term="Other" scheme="http://yoursite.com/categories/Other/"/>
    
    
      <category term="Bug" scheme="http://yoursite.com/tags/Bug/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/13/hello-world/"/>
    <id>http://yoursite.com/2019/04/13/hello-world/</id>
    <published>2019-04-13T05:53:38.839Z</published>
    <updated>2019-04-16T04:25:38.720Z</updated>
    
    <content type="html"><![CDATA[<div class="note info">            <p>quote test</p>          </div><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;
            &lt;p&gt;quote test&lt;/p&gt;
          &lt;/div&gt;
&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopene
      
    
    </summary>
    
      <category term="Other" scheme="http://yoursite.com/categories/Other/"/>
    
    
      <category term="Other" scheme="http://yoursite.com/tags/Other/"/>
    
  </entry>
  
</feed>
